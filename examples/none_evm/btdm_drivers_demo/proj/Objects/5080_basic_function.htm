<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\5080_basic_function.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\5080_basic_function.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Tue Nov  8 19:28:50 2022
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
PbapGoepClientCallback &rArr; GOEP_Connect &rArr; ClientBuildHeaders &rArr; OBEXH_BuildUnicode &rArr; OBEXH_BuildByteSeq &rArr; ObIsHeaderSpaceAvail
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[72]">USB_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">USB_IRQHandler</a><BR>
 <LI><a href="#[1b6]">ObParserTxBuffAvail</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1bd]">ObParserSendPacket</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8e]">AvdtpSigParseCapabilityRsp_imp</a> from protocol_patch.o(i.AvdtpSigParseCapabilityRsp_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[61]">BTSTACK_DisconnectReq</a> from obxbtstk.o(i.BTSTACK_DisconnectReq) referenced from obxbtstk.o(.constdata)
 <LI><a href="#[64]">BTSTACK_GetTpConnInfo</a> from obxbtstk.o(i.BTSTACK_GetTpConnInfo) referenced from obxbtstk.o(.constdata)
 <LI><a href="#[62]">BTSTACK_MaxTxSize</a> from obxbtstk.o(i.BTSTACK_MaxTxSize) referenced from obxbtstk.o(.constdata)
 <LI><a href="#[63]">BTSTACK_SendTxBuffer</a> from obxbtstk.o(i.BTSTACK_SendTxBuffer) referenced from obxbtstk.o(.constdata)
 <LI><a href="#[5]">BtClientCallBack</a> from obxbtstk.o(i.BtClientCallBack) referenced from obxbtstk.o(i.BTSTACK_ClientInit)
 <LI><a href="#[3]">BtClientCmgrCallback</a> from obxbtstk.o(i.BtClientCmgrCallback) referenced from obxbtstk.o(i.BTSTACK_ClientInit)
 <LI><a href="#[4]">BtClientGeneralCallback</a> from obxbtstk.o(i.BtClientGeneralCallback) referenced from obxbtstk.o(i.BTSTACK_ClientInit)
 <LI><a href="#[69]">BusFault_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[6c]">DebugMon_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[7]">GoepClntCallback</a> from goep.o(i.GoepClntCallback) referenced from goep.o(i.GOEP_RegisterClnt)
 <LI><a href="#[6]">GoepSecCallback</a> from goep.o(i.GoepSecCallback) referenced from goep.o(i.GOEP_RegisterClientSecurityRecord)
 <LI><a href="#[6]">GoepSecCallback</a> from goep.o(i.GoepSecCallback) referenced from goep.o(i.GOEP_RegisterClnt)
 <LI><a href="#[6]">GoepSecCallback</a> from goep.o(i.GoepSecCallback) referenced from goep.o(i.GoepClientSecAccessRequest)
 <LI><a href="#[67]">HardFault_Handler_Ram</a> from app_boot_vectors.o(.text) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[11]">HfRfCallback_imp</a> from app_bt_new.o(i.HfRfCallback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[11]">HfRfCallback_imp</a> from app_bt_new.o(i.HfRfCallback_imp) referenced from app_bt_new.o(i.bt_set_a2dp_type)
 <LI><a href="#[8b]">HfStateConnPending_imp</a> from protocol_patch.o(i.HfStateConnPending_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[a]">HidCmgrCallback</a> from syscall.txt(ABSOLUTE) referenced from hid_app.o(i.HID_Register_app)
 <LI><a href="#[9]">HidL2Callback</a> from syscall.txt(ABSOLUTE) referenced from hid_app.o(i.HID_Register_app)
 <LI><a href="#[87]">L2CAP_HciReceive_imp</a> from protocol_patch.o(i.L2CAP_HciReceive_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[8]">L2Cap_SecAccessRsp</a> from syscall.txt(ABSOLUTE) referenced from hid_app.o(i.HID_Register_app)
 <LI><a href="#[68]">MemManage_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[66]">NMI_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[81]">NVIC_EnableIRQ_imp</a> from patch.o(ram_code) referenced from patch.o(.data)
 <LI><a href="#[b]">ObClientEventInd</a> from obclient.o(i.ObClientEventInd) referenced from obclient.o(i.OBEX_ClientInit)
 <LI><a href="#[3f]">PBAPOBS_GetObjectLen</a> from pbapobs.o(i.PBAPOBS_GetObjectLen) referenced from pbap.o(.constdata)
 <LI><a href="#[3d]">PBAPOBS_Read</a> from pbapobs.o(i.PBAPOBS_Read) referenced from pbap.o(.constdata)
 <LI><a href="#[40]">PBAPOBS_ReadFlex</a> from pbapobs.o(i.PBAPOBS_ReadFlex) referenced from pbap.o(.constdata)
 <LI><a href="#[3e]">PBAPOBS_Write</a> from pbapobs.o(i.PBAPOBS_Write) referenced from pbap.o(.constdata)
 <LI><a href="#[c]">PbapGoepClientCallback</a> from pbap.o(i.PbapGoepClientCallback) referenced from pbap.o(i.PBAP_RegisterClnt)
 <LI><a href="#[6d]">PendSV_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[5b]">ProcessGeneral</a> from observer.o(i.ProcessGeneral) referenced from obxalloc.o(.constdata)
 <LI><a href="#[5d]">ProcessGet</a> from observer.o(i.ProcessGet) referenced from obxalloc.o(.constdata)
 <LI><a href="#[60]">ProcessGetEvents</a> from obclient.o(i.ProcessGetEvents) referenced from obxalloc.o(.constdata)
 <LI><a href="#[5c]">ProcessPut</a> from observer.o(i.ProcessPut) referenced from obxalloc.o(.constdata)
 <LI><a href="#[5f]">ProcessPutEvents</a> from obclient.o(i.ProcessPutEvents) referenced from obxalloc.o(.constdata)
 <LI><a href="#[5e]">ProcessSimpleOpEvents</a> from obclient.o(i.ProcessSimpleOpEvents) referenced from obxalloc.o(.constdata)
 <LI><a href="#[65]">Reset_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[83]">RfAdvanceIncomingToOpenState_imp</a> from protocol_patch.o(i.RfAdvanceIncomingToOpenState_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[6b]">SVC_Handler</a> from app_boot_vectors.o(.text) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[82]">SecProcessSecurityToken_imp</a> from protocol_patch.o(i.SecProcessSecurityToken_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[6e]">SysTick_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[72]">USB_IRQHandler</a> from app_boot_vectors.o(.text) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[6a]">UsageFault_Handler</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[1]">__2printf</a> from syscall.txt(ABSOLUTE) referenced from hardfault.o(.text.HardFault_Handler_C)
 <LI><a href="#[12]">a2dp_callback_imp</a> from app_bt_new.o(i.a2dp_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[12]">a2dp_callback_imp</a> from app_bt_new.o(i.a2dp_callback_imp) referenced from app_bt_new.o(i.bt_set_a2dp_type)
 <LI><a href="#[7d]">app_at_uart_recv</a> from app_at.o(ram_code) referenced 2 times from app_at.o(ram_code)
 <LI><a href="#[2f]">app_button_pressed_handler_imp</a> from patch.o(i.app_button_pressed_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[4a]">app_get_current_rssi_rsp</a> from app_ble_task_new.o(i.app_get_current_rssi_rsp) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[30]">app_msg_calibration_end_handler_imp</a> from patch.o(ram_code) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[3c]">app_otas_add_otass</a> from syscall.txt(ABSOLUTE) referenced from app_ble_new.o(.constdata)
 <LI><a href="#[55]">app_sec_msg_dflt_handler</a> from app_sec.o(i.app_sec_msg_dflt_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[21]">appm_adv_recv_gapm_cmp</a> from app_ble_new.o(i.appm_adv_recv_gapm_cmp) referenced from app_ble_new.o(i.appm_set_advertising_data)
 <LI><a href="#[21]">appm_adv_recv_gapm_cmp</a> from app_ble_new.o(i.appm_adv_recv_gapm_cmp) referenced from app_ble_new.o(i.appm_set_per_adv_data)
 <LI><a href="#[21]">appm_adv_recv_gapm_cmp</a> from app_ble_new.o(i.appm_adv_recv_gapm_cmp) referenced from app_ble_new.o(i.appm_set_scan_response_data)
 <LI><a href="#[21]">appm_adv_recv_gapm_cmp</a> from app_ble_new.o(i.appm_adv_recv_gapm_cmp) referenced from gap_api.o(i.gap_start_advertising)
 <LI><a href="#[21]">appm_adv_recv_gapm_cmp</a> from app_ble_new.o(i.appm_adv_recv_gapm_cmp) referenced from gap_api.o(i.gap_stop_advertising)
 <LI><a href="#[2e]">appm_ble_update_conn_param_handler_imp</a> from patch.o(i.appm_ble_update_conn_param_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[41]">appm_msg_handler</a> from app_ble_task_new.o(i.appm_msg_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[38]">audio_codec_buildin_sbc_imp</a> from audio_codec_new.o(i.audio_codec_buildin_sbc_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[1b]">audio_codec_init_imp</a> from audio_codec_new.o(ram_code) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[35]">audio_codec_mic_loop_handler_imp</a> from audio_codec_new.o(i.audio_codec_mic_loop_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[36]">audio_codec_mic_only_handler_imp</a> from audio_codec_new.o(i.audio_codec_mic_only_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[37]">audio_codec_native_playback_handler_imp</a> from audio_codec_new.o(i.audio_codec_native_playback_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[31]">audio_codec_off_handler_imp</a> from audio_codec_new.o(i.audio_codec_off_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[32]">audio_codec_sbc_handler_imp</a> from audio_codec_new.o(i.audio_codec_sbc_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[34]">audio_codec_sco_handler_imp</a> from audio_codec_new.o(i.audio_codec_sco_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[33]">audio_codec_tone_handler_imp</a> from audio_codec_new.o(i.audio_codec_tone_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[14]">avctp_callback_imp</a> from app_bt_new.o(i.avctp_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[14]">avctp_callback_imp</a> from app_bt_new.o(i.avctp_callback_imp) referenced from app_bt_new.o(i.bt_set_a2dp_type)
 <LI><a href="#[d]">avdev_callback_imp</a> from app_bt_new.o(i.avdev_callback_imp) referenced from a2dp_api.o(i.a2dp_open_stream)
 <LI><a href="#[d]">avdev_callback_imp</a> from app_bt_new.o(i.avdev_callback_imp) referenced from app_bt_new.o(i.a2dp_start_discover)
 <LI><a href="#[d]">avdev_callback_imp</a> from app_bt_new.o(i.avdev_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[d]">avdev_callback_imp</a> from app_bt_new.o(i.avdev_callback_imp) referenced 5 times from app_bt_new.o(i.avdev_callback_imp)
 <LI><a href="#[13]">avrcp_callback_imp</a> from app_bt_new.o(i.avrcp_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[13]">avrcp_callback_imp</a> from app_bt_new.o(i.avrcp_callback_imp) referenced from app_bt_new.o(i.bt_set_a2dp_type)
 <LI><a href="#[22]">ble_bond_addr_resolve_cb</a> from user_bond_manage.o(i.ble_bond_addr_resolve_cb) referenced from user_bond_manage.o(i.ble_bond_check)
 <LI><a href="#[2d]">bt_dev0_enter_sniff_handler</a> from patch.o(i.bt_dev0_enter_sniff_handler) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[7c]">cdc_isr_imp</a> from audio_codec_new.o(i.cdc_isr_imp) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[76]">exti_isr_ram</a> from app_boot_vectors.o(.text) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[58]">gapc_bond_ind_handler</a> from app_sec.o(i.gapc_bond_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[57]">gapc_bond_req_ind_handler</a> from app_sec.o(i.gapc_bond_req_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[4f]">gapc_cmp_evt_handler</a> from app_ble_task_new.o(i.gapc_cmp_evt_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[4d]">gapc_connection_req_ind_handler</a> from app_ble_task_new.o(i.gapc_connection_req_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[50]">gapc_disconnect_ind_handler</a> from app_ble_task_new.o(i.gapc_disconnect_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[5a]">gapc_encrypt_ind_handler</a> from app_sec.o(i.gapc_encrypt_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[59]">gapc_encrypt_req_ind_handler</a> from app_sec.o(i.gapc_encrypt_req_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[4b]">gapc_get_dev_info_req_ind_handler</a> from app_ble_task_new.o(i.gapc_get_dev_info_req_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[28]">gapc_hci_handler_imp</a> from patch.o(i.gapc_hci_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[4e]">gapc_param_update_req_ind_handler</a> from app_ble_task_new.o(i.gapc_param_update_req_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[52]">gapc_peer_features_ind_handler</a> from app_ble_task_new.o(i.gapc_peer_features_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[51]">gapc_peer_ver_ind_handler</a> from app_ble_task_new.o(i.gapc_peer_ver_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[56]">gapc_security_ind_handler</a> from app_sec.o(i.gapc_security_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[4c]">gapc_set_dev_info_req_ind_handler</a> from app_ble_task_new.o(i.gapc_set_dev_info_req_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[43]">gapm_activity_created_ind_handler</a> from app_ble_task_new.o(i.gapm_activity_created_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[44]">gapm_activity_stopped_ind_handler</a> from app_ble_task_new.o(i.gapm_activity_stopped_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[49]">gapm_addr_solved_ind_handler</a> from app_ble_task_new.o(i.gapm_addr_solved_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[45]">gapm_cmp_evt_handler</a> from app_ble_task_new.o(i.gapm_cmp_evt_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[53]">gapm_enc_block_ind_handler</a> from app_ble_task_new.o(i.gapm_enc_block_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[47]">gapm_ext_adv_report_ind_handler</a> from app_ble_task_new.o(i.gapm_ext_adv_report_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[46]">gapm_gen_rand_nb_ind_handler</a> from app_ble_task_new.o(i.gapm_gen_rand_nb_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[42]">gapm_profile_added_ind_handler</a> from app_ble_task_new.o(i.gapm_profile_added_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[48]">gapm_sync_established_ind_handler</a> from app_ble_task_new.o(i.gapm_sync_established_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[24]">gatt_msg_default_handler</a> from gatt_api.o(i.gatt_msg_default_handler) referenced from gatt_api.o(i.gatt_service_init)
 <LI><a href="#[92]">gatt_service_connection_cleanup</a> from gatt_api.o(i.gatt_service_connection_cleanup) referenced from gatt_api.o(.data)
 <LI><a href="#[91]">gatt_service_connection_created</a> from gatt_api.o(i.gatt_service_connection_created) referenced from gatt_api.o(.data)
 <LI><a href="#[90]">gatt_service_destroy</a> from gatt_api.o(i.gatt_service_destroy) referenced from gatt_api.o(.data)
 <LI><a href="#[8f]">gatt_service_init</a> from gatt_api.o(i.gatt_service_init) referenced from gatt_api.o(.data)
 <LI><a href="#[54]">gattc_event_ind_handler</a> from app_ble_task_new.o(i.gattc_event_ind_handler) referenced from app_ble_task_new.o(.constdata)
 <LI><a href="#[27]">hci_acl_data_handler_imp</a> from patch.o(i.hci_acl_data_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[26]">hci_event_handler_imp</a> from patch.o(i.hci_event_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[25]">hci_host_tx_cmd_handler_imp</a> from patch.o(i.hci_host_tx_cmd_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[2a]">hci_host_tx_data_handler_imp</a> from protocol_patch.o(i.hci_host_tx_data_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[29]">hci_nb_cmp_pkts_evt_handler</a> from patch.o(i.hci_nb_cmp_pkts_evt_handler) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[2b]">hci_rfcomm_close_to_handler</a> from protocol_patch.o(i.hci_rfcomm_close_to_handler) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[2c]">hci_rfcomm_open_to_handler</a> from protocol_patch.o(i.hci_rfcomm_open_to_handler) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[8a]">hfHandleNegotiateComplete_imp</a> from protocol_patch.o(i.hfHandleNegotiateComplete_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[10]">hf_callback_imp</a> from app_bt_new.o(i.hf_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[10]">hf_callback_imp</a> from app_bt_new.o(i.hf_callback_imp) referenced from app_bt_new.o(i.bt_set_a2dp_type)
 <LI><a href="#[16]">hid_callback_imp</a> from app_bt_new.o(i.hid_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[77]">i2s_isr_ram</a> from app_boot_vectors.o(.text) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[79]">ipc_isr_ram</a> from driver_ipc.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[18]">ke_handler_search_get_imp</a> from patch.o(i.ke_handler_search_get_imp) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[39]">lc_lmp_rx_handler_imp</a> from protocol_patch.o(i.lc_lmp_rx_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[3a]">lc_op_detach_ind_handler_imp</a> from protocol_patch.o(i.lc_op_detach_ind_handler_imp) referenced from patch.o(i.ke_handler_search_get_imp)
 <LI><a href="#[1f]">ld_acl_rx_sync_end_imp</a> from patch.o(i.ld_acl_rx_sync_end_imp) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[84]">ld_acl_start_imp</a> from protocol_patch.o(i.ld_acl_start_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[88]">llc_rem_dl_upd_proc_imp</a> from protocol_patch.o(i.llc_rem_dl_upd_proc_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[89]">lld_con_frm_cbk_imp</a> from protocol_patch.o(ram_code) referenced from fpb_patch.o(.data)
 <LI><a href="#[8d]">lld_con_sched_imp</a> from protocol_patch.o(i.lld_con_sched_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[85]">lm_get_sync_offset_imp</a> from protocol_patch.o(i.lm_get_sync_offset_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[1d]">low_power_restore_entry_patch</a> from patch.o(ram_code) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[1e]">low_power_save_entry_patch</a> from patch.o(ram_code) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[f]">me_callback_imp</a> from app_bt_new.o(i.me_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[23]">os_default_task_func</a> from os_task.o(i.os_default_task_func) referenced from os_task.o(i.from_task_func_to_msg_handle)
 <LI><a href="#[17]">pmu_init_imp</a> from pmu_patch.o(i.pmu_init_imp) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[78]">pmu_isr_imp</a> from pmu_patch.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[8c]">prf_itf_get_imp</a> from protocol_patch.o(i.prf_itf_get_imp) referenced from fpb_patch.o(.data)
 <LI><a href="#[0]">prv_call_svc_pc</a> from syscall.txt(ABSOLUTE) referenced from app_boot_vectors.o(.text)
 <LI><a href="#[19]">rf_init_imp</a> from rf_patch.o(ram_code) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[71]">rwble_isr_imp</a> from rf_patch.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[70]">rwbt_isr_imp</a> from rf_patch.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[6f]">rwip_isr_imp</a> from rf_patch.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[80]">rwip_param_dummy_del</a> from patch.o(i.rwip_param_dummy_del) referenced from patch.o(ram_code)
 <LI><a href="#[7e]">rwip_param_dummy_get</a> from patch.o(i.rwip_param_dummy_get) referenced from patch.o(ram_code)
 <LI><a href="#[7f]">rwip_param_dummy_set</a> from patch.o(i.rwip_param_dummy_set) referenced from patch.o(ram_code)
 <LI><a href="#[1a]">sbc_init_imp</a> from audio_codec_new.o(ram_code) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[7b]">sbc_isr_imp</a> from audio_codec_new.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[86]">sch_arb_prog_timer_imp</a> from protocol_patch.o(ram_code) referenced from fpb_patch.o(.data)
 <LI><a href="#[e]">security_event_handler_imp</a> from app_bt_new.o(i.security_event_handler_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[15]">spp_callback_imp</a> from app_bt_new.o(i.spp_callback_imp) referenced from app_bt_new.o(i.app_bt_init_imp)
 <LI><a href="#[3b]">spp_rfcomm_callback_imp</a> from protocol_patch.o(i.spp_rfcomm_callback_imp) referenced from protocol_patch.o(i.spp_register_imp)
 <LI><a href="#[7a]">ssp_isr</a> from app_boot_vectors.o(.text) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[1c]">svc_exception_handler_imp</a> from fpb_patch.o(ram_code) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[73]">timer0_isr_ram</a> from driver_timer.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[74]">timer1_isr_ram</a> from driver_timer.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[75]">uart_isr_ram</a> from app_at.o(ram_code) referenced from app_boot_vectors.o(RESET)
 <LI><a href="#[20]">user_app_bt_profile_init_end</a> from patch.o(i.user_app_bt_profile_init_end) referenced from patch.o(i.app_entry_sub)
 <LI><a href="#[2]">user_task_func</a> from user_task.o(.text.user_task_func) referenced from user_task.o(.text.user_task_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[cf]"></a>fr_mul_64</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_calibration_end_handler_imp (via Veneer)
</UL>

<P><STRONG><a name="[10d]"></a>vPortSVCHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler (via Veneer)
</UL>

<P><STRONG><a name="[0]"></a>prv_call_svc_pc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_flush (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_calibration_end_handler_imp (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_imp (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp (via Veneer)
</UL>

<P><STRONG><a name="[b5]"></a>CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_flush (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_calibration_end_handler_imp (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_imp (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp (via Veneer)
</UL>

<P><STRONG><a name="[dd]"></a>GLOBAL_INT_STOP</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
</UL>

<P><STRONG><a name="[de]"></a>GLOBAL_INT_START</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
</UL>

<P><STRONG><a name="[14a]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
</UL>

<P><STRONG><a name="[1fe]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post (via Veneer)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_custom_parameters (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_param_dummy_get (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HidRegisterSdp_app (via Veneer)
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp (via Veneer)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvRsp_imp (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp (via Veneer)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleLinkKeyNotify_imp (via Veneer)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init (via Veneer)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address (via Veneer)
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init (via Veneer)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via Veneer)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func (via Veneer)
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check (via Veneer)
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDB_AddRecord_imp (via Veneer)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvdtpSigParseCapabilityRsp_imp (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback (via Veneer)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientBuildProtocolHeader (via Veneer)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_dev_name (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateConn (via Veneer)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerReadHeaderBlock (via Veneer)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientReadHeaderBlock (via Veneer)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext (via Veneer)
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digital_codec_init_imp (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HidRegisterSdp_app (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpRegisterSdpService_imp (via Veneer)
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp (via Veneer)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PceAddServiceRecord (via Veneer)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrClient (via Veneer)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyAllClients (via Veneer)
</UL>

<P><STRONG><a name="[1cc]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config (via Veneer)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc (via Veneer)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp (via Veneer)
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_remote_svc (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback (via Veneer)
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_reconnect (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp (via Veneer)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBA_ClientInit (via Veneer)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_Init (via Veneer)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_Init (via Veneer)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Init (via Veneer)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_start_imp (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback (via Veneer)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientProcessHeaders (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientInit (via Veneer)
</UL>

<P><STRONG><a name="[23f]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb (via Veneer)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_check_ediv_rand (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check (via Veneer)
</UL>

<P><STRONG><a name="[1e1]"></a>A2DP_GetRemoteDevice</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[1e5]"></a>A2dpCloseStream</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_close_stream (via Veneer)
</UL>

<P><STRONG><a name="[14d]"></a>A2dpRegisterSdpService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpRegisterSdpService_imp (via Veneer)
</UL>

<P><STRONG><a name="[239]"></a>A2dpSetStreamConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[23a]"></a>AVCTP_RemoteDevice</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[1e6]"></a>AVDEV_CreateACLLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_open_stream (via Veneer)
</UL>

<P><STRONG><a name="[1e7]"></a>AVDEV_CreateSignalLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_open_stream (via Veneer)
</UL>

<P><STRONG><a name="[237]"></a>AVDEV_SignalConnectRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[1ea]"></a>AVDTP_StartStream</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_start_stream (via Veneer)
</UL>

<P><STRONG><a name="[1eb]"></a>AVDTP_SuspendStream</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_suspend_stream (via Veneer)
</UL>

<P><STRONG><a name="[249]"></a>AVRCP_Deregister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type (via Veneer)
</UL>

<P><STRONG><a name="[23d]"></a>AVRCP_Disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect (via Veneer)
</UL>

<P><STRONG><a name="[1f8]"></a>AVRCP_RegisterSec</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp (via Veneer)
</UL>

<P><STRONG><a name="[23e]"></a>AVRCP_TgSetAbsoluteVolume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tg_set_absolute_volume (via Veneer)
</UL>

<P><STRONG><a name="[1a1]"></a>AtSendCommand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateComplete_imp (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfStateConnPending_imp (via Veneer)
</UL>

<P><STRONG><a name="[151]"></a>AvrcpHandlePanelInput</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_SetPanelKey_imp (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[15f]"></a>AvrcpHandlePanelRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelRsp_imp (via Veneer)
</UL>

<P><STRONG><a name="[159]"></a>BEtoHost16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvRsp_imp (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleGetElementAttrRsp (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback (via Veneer)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParseRx (via Veneer)
</UL>

<P><STRONG><a name="[153]"></a>BEtoHost32</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleGetPlayStatusRsp (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleGetElementAttrRsp (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders (via Veneer)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppCallback (via Veneer)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientEventInd (via Veneer)
</UL>

<P><STRONG><a name="[162]"></a>CMGR_IsLinkUp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateComplete_imp (via Veneer)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientDisconnect (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtStartServiceQuery (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink (via Veneer)
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback (via Veneer)
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack (via Veneer)
</UL>

<P><STRONG><a name="[165]"></a>CMGR_RegisterHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientInit (via Veneer)
</UL>

<P><STRONG><a name="[175]"></a>CMGR_RemoveDataLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink (via Veneer)
</UL>

<P><STRONG><a name="[180]"></a>DDB_find_max_prior</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDB_AddRecord_imp (via Veneer)
</UL>

<P><STRONG><a name="[181]"></a>DS_DeleteDevice</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;me_callback_imp (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDB_AddRecord_imp (via Veneer)
</UL>

<P><STRONG><a name="[1d2]"></a>DS_FindDevice</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AddDeviceRecord_imp (via Veneer)
</UL>

<P><STRONG><a name="[201]"></a>EVM_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[15d]"></a>EvmCancelTimer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvancedResponse_imp (via Veneer)
</UL>

<P><STRONG><a name="[202]"></a>EvmInitTimer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[285]"></a>HF_AnswerCall</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_answer_call (via Veneer)
</UL>

<P><STRONG><a name="[289]"></a>HF_CreateServiceLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_connect (via Veneer)
</UL>

<P><STRONG><a name="[24d]"></a>HF_Deregister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type (via Veneer)
</UL>

<P><STRONG><a name="[28b]"></a>HF_DisconnectAudioLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_disconnect_audio_link (via Veneer)
</UL>

<P><STRONG><a name="[28a]"></a>HF_DisconnectServiceLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_disconnect (via Veneer)
</UL>

<P><STRONG><a name="[28c]"></a>HF_EnableVoiceRecognition</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_enable_voice_recognition (via Veneer)
</UL>

<P><STRONG><a name="[286]"></a>HF_GetRemoteBDAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[28d]"></a>HF_Hangup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_hang_up (via Veneer)
</UL>

<P><STRONG><a name="[204]"></a>HF_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[28e]"></a>HF_Redial</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_redial (via Veneer)
</UL>

<P><STRONG><a name="[1f7]"></a>HF_RegisterSec</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp (via Veneer)
</UL>

<P><STRONG><a name="[28f]"></a>HF_ReportSpeakerVolume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_report_speaker_volume (via Veneer)
</UL>

<P><STRONG><a name="[1a0]"></a>HfAppCallback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateComplete_imp (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfStateConnPending_imp (via Veneer)
</UL>

<P><STRONG><a name="[19e]"></a>HfFindChannel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfRfCallback_imp (via Veneer)
</UL>

<P><STRONG><a name="[19f]"></a>HfRfCallback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfRfCallback_imp (via Veneer)
</UL>

<P><STRONG><a name="[284]"></a>HfStartServiceQuery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateIndFail (via Veneer)
</UL>

<P><STRONG><a name="[a]"></a>HidCmgrCallback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> hid_app.o(i.HID_Register_app)
</UL>
<P><STRONG><a name="[9]"></a>HidL2Callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> hid_app.o(i.HID_Register_app)
</UL>
<P><STRONG><a name="[142]"></a>IsNodeOnList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_CtGetMediaInfo (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Deregister_imp (via Veneer)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyServerAppHandle (via Veneer)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyClientAppHandle (via Veneer)
</UL>

<P><STRONG><a name="[19b]"></a>L2CAP_RegisterPsm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app (via Veneer)
</UL>

<P><STRONG><a name="[2be]"></a>L2Cap_FreeChannel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;me_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[1a4]"></a>L2Cap_GetValidChannel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp (via Veneer)
</UL>

<P><STRONG><a name="[1a5]"></a>L2Cap_NotifyPsm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp (via Veneer)
</UL>

<P><STRONG><a name="[1a7]"></a>L2Cap_ProcessReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp (via Veneer)
</UL>

<P><STRONG><a name="[1a6]"></a>L2Cap_ProcessRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp (via Veneer)
</UL>

<P><STRONG><a name="[8]"></a>L2Cap_SecAccessRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> hid_app.o(i.HID_Register_app)
</UL>
<P><STRONG><a name="[1a3]"></a>LEtoHost16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp
</UL>

<P><STRONG><a name="[1d5]"></a>LEtoHost32</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
</UL>

<P><STRONG><a name="[2bb]"></a>LM_GetFeature</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
</UL>

<P><STRONG><a name="[275]"></a>ME_Callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
</UL>

<P><STRONG><a name="[246]"></a>ME_CancelInquiry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_cancel_inquiry
</UL>

<P><STRONG><a name="[1d4]"></a>ME_FindRemoteDeviceP</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_dev0_enter_sniff_handler
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleLinkKeyNotify_imp
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>

<P><STRONG><a name="[1e2]"></a>ME_GetBdAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[24f]"></a>ME_Inquiry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_start_inquiry
</UL>

<P><STRONG><a name="[166]"></a>ME_RegisterGlobalHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientInit
</UL>

<P><STRONG><a name="[24e]"></a>ME_SetAccessibleModeNC</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_accessible_mode_nc
</UL>

<P><STRONG><a name="[1f3]"></a>ME_SetDefaultLinkPolicy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[1f6]"></a>ME_SetEventMask</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[247]"></a>ME_StartSniff</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_start_sniff
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_dev0_enter_sniff_handler
</UL>

<P><STRONG><a name="[1de]"></a>MeDevEventHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>

<P><STRONG><a name="[1db]"></a>MeDisconnectLink</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>

<P><STRONG><a name="[27c]"></a>MeHandleEvents</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_handler_imp
</UL>

<P><STRONG><a name="[1a2]"></a>MeMapHciToRemoteDevice</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp
</UL>

<P><STRONG><a name="[1d9]"></a>MeStartOperation</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>

<P><STRONG><a name="[155]"></a>OS_MemCmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelRsp_imp
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateConn
</UL>

<P><STRONG><a name="[16f]"></a>RF_AdvanceCredit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[161]"></a>RF_CloseChannel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateIndFail
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateComplete_imp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfStateConnPending_imp
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientDisconnect
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_DisconnectReq
</UL>

<P><STRONG><a name="[167]"></a>RF_FrameSize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_MaxTxSize
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_GetTpConnInfo
</UL>

<P><STRONG><a name="[16d]"></a>RF_OpenClientChannel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[168]"></a>RF_RemoteDevice</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfRfCallback_imp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_GetTpConnInfo
</UL>

<P><STRONG><a name="[169]"></a>RF_SendData</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_SendTxBuffer
</UL>

<P><STRONG><a name="[144]"></a>RemoveEntryList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Deregister_imp
</UL>

<P><STRONG><a name="[1cf]"></a>RfAppCallback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAdvanceToOpenTimeoutHandler_imp
</UL>

<P><STRONG><a name="[1d0]"></a>RfFreeDLC</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rfcomm_close_to_handler
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAdvanceToOpenTimeoutHandler_imp
</UL>

<P><STRONG><a name="[1ce]"></a>RfSendModemStatus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAdvanceToOpenTimeoutHandler_imp
</UL>

<P><STRONG><a name="[14c]"></a>SDP_AddRecord</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HidRegisterSdp_app
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpRegisterSdpService_imp
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PceAddServiceRecord
</UL>

<P><STRONG><a name="[177]"></a>SDP_ParseAttributes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtVerifySdpQueryRsp
</UL>

<P><STRONG><a name="[176]"></a>SDP_Query</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtStartServiceQuery
</UL>

<P><STRONG><a name="[143]"></a>SDP_RemoveRecord</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Deregister_imp
</UL>

<P><STRONG><a name="[195]"></a>SEC_AccessRequest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientSecAccessRequest
</UL>

<P><STRONG><a name="[2c6]"></a>SEC_AuthorizeServiceB</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;security_event_handler_imp
</UL>

<P><STRONG><a name="[197]"></a>SEC_CancelAccessRequest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClntCallback
</UL>

<P><STRONG><a name="[18a]"></a>SEC_Register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClientSecurityRecord
</UL>

<P><STRONG><a name="[1f2]"></a>SEC_RegisterAuthorizeHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[1f1]"></a>SEC_RegisterPairingHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[1f4]"></a>SEC_SetBondingMode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[1f5]"></a>SEC_SetIoCapabilities</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[2c5]"></a>SEC_SetPin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;security_event_handler_imp
</UL>

<P><STRONG><a name="[19d]"></a>SEC_Unregister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
</UL>

<P><STRONG><a name="[2c8]"></a>SEC_UserConfirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;security_event_handler_imp
</UL>

<P><STRONG><a name="[1df]"></a>SecAddAuthenticateOpToQueue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecProcessSecurityToken_imp
</UL>

<P><STRONG><a name="[1d7]"></a>SecBtGetFreeSecurityOp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecProcessSecurityToken_imp
</UL>

<P><STRONG><a name="[1dc]"></a>SecGetPinLen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>

<P><STRONG><a name="[1e0]"></a>SecIsCurrentSecurityGoodEnough</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecProcessSecurityToken_imp
</UL>

<P><STRONG><a name="[1bf]"></a>StoreBE16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[14f]"></a>StoreBE32</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_CtGetMediaInfo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientBuildProtocolHeader
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build4Byte
</UL>

<P><STRONG><a name="[27d]"></a>StoreLE16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_host_tx_cmd_handler_imp
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
</UL>

<P><STRONG><a name="[6e]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[1d8]"></a>_InsertHeadList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecProcessSecurityToken_imp
</UL>

<P><STRONG><a name="[148]"></a>_InsertTailList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecProcessSecurityToken_imp
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAPOBS_Init
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAPOBS_Close
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_ClientInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_TxDone
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_ReturnTxBuffer
</UL>

<P><STRONG><a name="[146]"></a>_OS_LockStack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_Init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AddDeviceRecord_imp
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>

<P><STRONG><a name="[14b]"></a>_OS_UnlockStack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_Init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AddDeviceRecord_imp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
</UL>

<P><STRONG><a name="[1b9]"></a>_RemoveHeadList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;me_callback_imp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_GetTxBuffer
</UL>

<P><STRONG><a name="[1]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler_C
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_stack_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_custom_parameters
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_notify_error_func
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_HciReceive_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hardfault.o(.text.HardFault_Handler_C)
</UL>
<P><STRONG><a name="[e9]"></a>app_boot_host_comm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retry_handshake (via Veneer)
</UL>

<P><STRONG><a name="[203]"></a>app_bt_profile_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[eb]"></a>app_calibration_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[e4]"></a>app_ipc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[3c]"></a>app_otas_add_otass</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_ble_new.o(.constdata)
</UL>
<P><STRONG><a name="[1fb]"></a>app_otas_enable_prf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
</UL>

<P><STRONG><a name="[205]"></a>app_task_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[272]"></a>attm_att_set_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[271]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[2c2]"></a>attm_uuid_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info_uuid_128
</UL>

<P><STRONG><a name="[22a]"></a>attmdb_add_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext
</UL>

<P><STRONG><a name="[c8]"></a>audio_codec_play_tone</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[236]"></a>audio_prepare_tone</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
</UL>

<P><STRONG><a name="[23b]"></a>bt_avrcp_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tg_set_absolute_volume
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_ct_get_media_info
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback_imp
</UL>

<P><STRONG><a name="[23c]"></a>bt_avrcp_malloc_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tg_set_absolute_volume
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_ct_get_media_info
</UL>

<P><STRONG><a name="[276]"></a>bt_util_buf_acl_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp
</UL>

<P><STRONG><a name="[281]"></a>bt_util_buf_acl_tx_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
</UL>

<P><STRONG><a name="[97]"></a>button_toggle_detected</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_gpio_isr_ram (via Veneer)
</UL>

<P><STRONG><a name="[113]"></a>co_ascii_strn2val</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>

<P><STRONG><a name="[1e9]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_start_discover
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_start_imp
</UL>

<P><STRONG><a name="[ba]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_flush (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_isr_imp (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_imp (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_imp (via Veneer)
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avdev_find_prefer_codec
</UL>

<P><STRONG><a name="[1e4]"></a>co_list_pop_subfront</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[b4]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_send (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_imp (via Veneer)
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[27b]"></a>co_list_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
</UL>

<P><STRONG><a name="[1e3]"></a>find_device</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback_imp
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[10f]"></a>fputc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putchar
</UL>

<P><STRONG><a name="[d0]"></a>fr_div_64</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_calibration_end_handler_imp (via Veneer)
</UL>

<P><STRONG><a name="[256]"></a>gapc_get_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[277]"></a>gapc_get_dest_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
</UL>

<P><STRONG><a name="[278]"></a>gapc_send_disconect_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
</UL>

<P><STRONG><a name="[279]"></a>gapc_send_error_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
</UL>

<P><STRONG><a name="[27a]"></a>gapm_con_cleanup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
</UL>

<P><STRONG><a name="[288]"></a>get_hf_free_channel_index</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_connect
</UL>

<P><STRONG><a name="[282]"></a>hci_acl_tx_data_received</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
</UL>

<P><STRONG><a name="[27e]"></a>hci_cmd_received</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_host_tx_cmd_handler_imp
</UL>

<P><STRONG><a name="[2b6]"></a>hci_send_2_host</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
</UL>

<P><STRONG><a name="[e1]"></a>intc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch (via Veneer)
</UL>

<P><STRONG><a name="[b2]"></a>ipc_alloc_channel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[bc]"></a>ipc_free_channel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_isr_ram (via Veneer)
</UL>

<P><STRONG><a name="[b7]"></a>ipc_get_buffer_offset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[b3]"></a>ipc_insert_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
</UL>

<P><STRONG><a name="[f6]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler
</UL>

<P><STRONG><a name="[be]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_isr_imp (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_report_speaker_volume
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_hang_up
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_answer_call
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_enable_voice_recognition
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_redial
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_imp (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create_x
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_build_task_desc
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Deregister_imp
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_callback_imp
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avdev_find_prefer_codec
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clr_peer_svc
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext
</UL>

<P><STRONG><a name="[149]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_report_speaker_volume
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_hang_up
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_answer_call
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_enable_voice_recognition
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_redial
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_task_func_to_msg_handle
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_build_task_desc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_start_imp
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext
</UL>

<P><STRONG><a name="[c5]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_isr_imp (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scan_act
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_sync_act
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_adv_act
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_legacy_adv_act
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_aux_adv_act
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_send_gapm_reset_cmd
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_conn_param_update
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_conn_act
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAdvanceIncomingToOpenState_imp
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
</UL>

<P><STRONG><a name="[25b]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[c7]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_isr_imp (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scan_act
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_sync_act
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_adv_act
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_legacy_adv_act
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_aux_adv_act
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_send_gapm_reset_cmd
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_conn_param_update
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_conn_act
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAdvanceIncomingToOpenState_imp
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
</UL>

<P><STRONG><a name="[d4]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_time_calc_ram (via Veneer)
</UL>

<P><STRONG><a name="[c6]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_isr_imp (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sco_handler_imp
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sbc_handler_imp
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_off_handler_imp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_native_playback_handler_imp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_only_handler_imp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_loop_handler_imp
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_op_detach_ind_handler_imp
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_host_tx_data_handler_imp
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_ver_req_handler_imp
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_sniff_req_handler_imp
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_set_afh_handler_imp
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[c3]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_version_imp
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_handler_imp
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_init_imp (via Veneer)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sco_handler_imp
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sbc_handler_imp
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_off_handler_imp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_native_playback_handler_imp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_only_handler_imp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_loop_handler_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_add_svc
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[c2]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_init_imp (via Veneer)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create_x
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp
</UL>

<P><STRONG><a name="[f5]"></a>ke_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[274]"></a>ke_timer_active</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_host_tx_data_handler_imp
</UL>

<P><STRONG><a name="[21a]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_update_conn_param_handler_imp
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_dev0_enter_sniff_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[1fd]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler_imp
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_dev0_enter_sniff_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sco_handler_imp
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_host_tx_data_handler_imp
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_db_init_complete_ind_func
</UL>

<P><STRONG><a name="[280]"></a>l2cm_get_nb_buffer_available</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler
</UL>

<P><STRONG><a name="[2b7]"></a>lc_conn_seq_done</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
</UL>

<P><STRONG><a name="[29a]"></a>lc_detach</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_op_detach_ind_handler_imp
</UL>

<P><STRONG><a name="[2b8]"></a>lc_ext_feat</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
</UL>

<P><STRONG><a name="[2b4]"></a>lc_rem_name_cont</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
</UL>

<P><STRONG><a name="[2a4]"></a>lc_sam_intv_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2a5]"></a>lc_sam_slot_av_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[299]"></a>lc_sco_detach</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_op_detach_ind_handler_imp
</UL>

<P><STRONG><a name="[29c]"></a>lc_send_lmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_pdu_vers_req_imp
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_ver_req_handler_imp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
</UL>

<P><STRONG><a name="[2a7]"></a>lc_send_pdu_acc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[29e]"></a>lc_send_pdu_not_acc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_sniff_req_handler_imp
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_set_afh_handler_imp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[298]"></a>lc_sniff_unsniff</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_op_detach_ind_handler_imp
</UL>

<P><STRONG><a name="[2a8]"></a>lc_start_lmp_to</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_version_imp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2a3]"></a>lc_util_get_offset_clke</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2a0]"></a>lc_util_get_offset_clkn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2bd]"></a>ld_acl_afh_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_set_afh_handler_imp
</UL>

<P><STRONG><a name="[29f]"></a>ld_acl_clock_offset_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2a6]"></a>ld_acl_sniff_trans</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2ab]"></a>ld_active_mode_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_start_imp
</UL>

<P><STRONG><a name="[24c]"></a>ld_class_of_dev_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
</UL>

<P><STRONG><a name="[101]"></a>ld_inq_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[2a9]"></a>ld_read_clock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_start_imp
</UL>

<P><STRONG><a name="[24b]"></a>ld_util_bch_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
</UL>

<P><STRONG><a name="[290]"></a>led_get_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
</UL>

<P><STRONG><a name="[2ad]"></a>llc_llcp_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_length_rsp_pdu_send_imp
</UL>

<P><STRONG><a name="[2ae]"></a>lld_con_data_len_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_dl_upd_proc_imp
</UL>

<P><STRONG><a name="[2b0]"></a>lld_con_max_lat_calc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_imp
</UL>

<P><STRONG><a name="[103]"></a>lld_rxdesc_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_frm_cbk_imp (via Veneer)
</UL>

<P><STRONG><a name="[2b9]"></a>lm_get_sec_con_host_supp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
</UL>

<P><STRONG><a name="[2ba]"></a>lm_get_sp_en</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
</UL>

<P><STRONG><a name="[2b2]"></a>lm_sco_move_en</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lm_get_sync_offset_imp
</UL>

<P><STRONG><a name="[dc]"></a>low_power_restore</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
</UL>

<P><STRONG><a name="[db]"></a>low_power_save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
</UL>

<P><STRONG><a name="[2c3]"></a>otas_prf_itf_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get_imp
</UL>

<P><STRONG><a name="[248]"></a>platform_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_notify_error_func
</UL>

<P><STRONG><a name="[a6]"></a>pmu_disable_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otd_isr_ram (via Veneer)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvd_isr_ram (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_isr_ram (via Veneer)
</UL>

<P><STRONG><a name="[ea]"></a>pmu_get_isr_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[e6]"></a>qspi_cfg_set_baudrate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch (via Veneer)
</UL>

<P><STRONG><a name="[e5]"></a>qspi_flash_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch (via Veneer)
</UL>

<P><STRONG><a name="[105]"></a>qspi_stig_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable_nonvolatile (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status_imp (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status_imp (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wip_clear (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
</UL>

<P><STRONG><a name="[ed]"></a>rf_init_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_imp (via Veneer)
</UL>

<P><STRONG><a name="[d8]"></a>rwble_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[f4]"></a>rwble_sleep_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end_imp (via Veneer)
</UL>

<P><STRONG><a name="[24a]"></a>rwbt_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
</UL>

<P><STRONG><a name="[d7]"></a>rwbt_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[f3]"></a>rwbt_sleep_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end_imp (via Veneer)
</UL>

<P><STRONG><a name="[2b1]"></a>rwip_active_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_imp
</UL>

<P><STRONG><a name="[f8]"></a>rwip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[d2]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_calibration_end_handler_imp (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end_imp (via Veneer)
</UL>

<P><STRONG><a name="[207]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[da]"></a>rwip_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
</UL>

<P><STRONG><a name="[102]"></a>rwip_sw_int_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[d5]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_isr_imp (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_time_calc_ram (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_imp (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end_imp (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_clk_isr_imp (via Veneer)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_prog_timer_imp (via Veneer)
</UL>

<P><STRONG><a name="[100]"></a>rwip_timer_hus_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_prog_timer_imp (via Veneer)
</UL>

<P><STRONG><a name="[22f]"></a>sbc_decoder_clear_fifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
</UL>

<P><STRONG><a name="[22c]"></a>sbc_decoder_mono_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
</UL>

<P><STRONG><a name="[bf]"></a>sbc_init_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_imp (via Veneer)
</UL>

<P><STRONG><a name="[2bc]"></a>sch_alarm_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_set_afh_handler_imp
</UL>

<P><STRONG><a name="[2aa]"></a>sch_arb_insert</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_imp
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_start_imp
</UL>

<P><STRONG><a name="[2a1]"></a>sch_plan_chk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2a2]"></a>sch_plan_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>

<P><STRONG><a name="[2b3]"></a>sch_plan_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lm_get_sync_offset_imp
</UL>

<P><STRONG><a name="[fb]"></a>sch_prog_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_isr_imp (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[f1]"></a>sch_prog_push</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_clk_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[f9]"></a>sch_prog_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_isr_imp (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[fa]"></a>sch_prog_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_isr_imp (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[fc]"></a>sch_prog_tx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[2c9]"></a>spp_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_register_imp
</UL>

<P><STRONG><a name="[2ca]"></a>spp_rfcomm_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_rfcomm_callback_imp
</UL>

<P><STRONG><a name="[2cb]"></a>spp_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data
</UL>

<P><STRONG><a name="[ae]"></a>timer_clear_interrupt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_isr_ram (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_isr_ram (via Veneer)
</UL>

<P><STRONG><a name="[9e]"></a>uart0_read_for_hci</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_uart_recv (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_init_app (via Veneer)
</UL>

<P><STRONG><a name="[a1]"></a>uart_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_init_app (via Veneer)
</UL>

<P><STRONG><a name="[9a]"></a>uart_putc_noint</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp (via Veneer)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_imp
</UL>

<P><STRONG><a name="[93]"></a>app_entry</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, patch.o(entry_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_entry &rArr; app_entry_sub &rArr; pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[72]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, app_boot_vectors.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>exti_isr_ram</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, app_boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[2cc]"></a>i2s_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, app_boot_vectors.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>i2s_isr_ram</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, app_boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>ssp_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, app_boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[10e]"></a>putchar</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, putchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_custom_parameters
</UL>

<P><STRONG><a name="[aa]"></a>puts</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = puts
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_isr_ram (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_onkey_isr_ram (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_adkey1_isr_ram (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_adkey0_isr_ram (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onkey_isr_ram (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler_C
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drivers
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_stack_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_custom_parameters
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_reconnect
</UL>

<P><STRONG><a name="[10c]"></a>HardFault_Handler_C</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, hardfault.o(.text.HardFault_Handler_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler_C &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler_Ram
</UL>

<P><STRONG><a name="[116]"></a>app_at_cmd_recv_handler</STRONG> (Thumb, 720 bytes, Stack size 56 bytes, app_at.o(.text.app_at_cmd_recv_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_at_cmd_recv_handler &rArr; bt_set_spk_volume &rArr; pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_hang_up
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_answer_call
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_ct_get_media_info
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_enable_voice_recognition
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_start_stream
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_open_stream
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_redial
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_disconnect
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_spk_volume
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_get_current_mode
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_start_sniff
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_cancel_inquiry
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_suspend_stream
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_get_a2dp_type
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_ascii_strn2val
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_strn2val
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_accessible_mode_nc
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_reconnect
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_start_inquiry
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task_func
</UL>

<P><STRONG><a name="[121]"></a>bt_disconnect</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, user_bt.o(.text.bt_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_disconnect &rArr; a2dp_close_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_close_stream
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_disconnect
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_disconnect_audio_link
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[11f]"></a>bt_reconnect</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, user_bt.o(.text.bt_reconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bt_reconnect &rArr; reconnect_according_to_profile &rArr; a2dp_open_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_get_last_device
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reconnect_according_to_profile
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[120]"></a>bt_set_spk_volume</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, user_bt.o(.text.bt_set_spk_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bt_set_spk_volume &rArr; pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pskeys_update_app_data
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tg_set_absolute_volume
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_report_speaker_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[df]"></a>pmu_clear_isr_state</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, driver_pmu.o(.text.pmu_clear_isr_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_clear_isr_state &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save_entry_patch (via Veneer)
</UL>

<P><STRONG><a name="[135]"></a>pwm_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, driver_pwm.o(.text.pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_pclk
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_pwm
</UL>

<P><STRONG><a name="[13a]"></a>pwm_start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_pwm.o(.text.pwm_start))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_pwm
</UL>

<P><STRONG><a name="[130]"></a>reconnect_according_to_profile</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, user_bt.o(.text.reconnect_according_to_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = reconnect_according_to_profile &rArr; a2dp_open_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_connect
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_open_stream
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_accessible_mode_nc
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_reconnect
</UL>

<P><STRONG><a name="[136]"></a>system_get_pclk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_syscntl.o(.text.system_get_pclk))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[138]"></a>test_drivers</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, test_drivers.o(.text.test_drivers))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = test_drivers &rArr; test_pwm &rArr; pwm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_pwm
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
</UL>

<P><STRONG><a name="[139]"></a>test_pwm</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, test_drivers.o(.text.test_pwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = test_pwm &rArr; pwm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_start
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_mux (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drivers
</UL>

<P><STRONG><a name="[13b]"></a>user_custom_parameters</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, proj_main.o(.text.user_custom_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = user_custom_parameters &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[13c]"></a>user_entry_after_stack_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, proj_main.o(.text.user_entry_after_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = user_entry_after_stack_init &rArr; user_task_init &rArr; os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drivers
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_init_app (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;me_callback_imp
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_reset_complete_ind_func
</UL>

<P><STRONG><a name="[13f]"></a>user_entry_before_stack_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, proj_main.o(.text.user_entry_before_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = user_entry_before_stack_init &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[13d]"></a>user_task_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_task.o(.text.user_task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = user_task_init &rArr; os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
</UL>

<P><STRONG><a name="[141]"></a>A2DP_Deregister_imp</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, a2dp_sdp_new.o(i.A2DP_Deregister_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = A2DP_Deregister_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDP_RemoveRecord
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveEntryList
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNodeOnList (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
</UL>

<P><STRONG><a name="[145]"></a>A2DP_Register_imp</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, a2dp_sdp_new.o(i.A2DP_Register_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = A2DP_Register_imp &rArr; A2dpRegisterSdpService_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNodeOnList (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_UnlockStack
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_LockStack
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpRegisterSdpService_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[147]"></a>A2dpRegisterSdpService_imp</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, a2dp_sdp_new.o(i.A2dpRegisterSdpService_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = A2dpRegisterSdpService_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDP_AddRecord
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpRegisterSdpService (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
</UL>

<P><STRONG><a name="[14e]"></a>AVRCP_CtGetMediaInfo</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, avrcp_api.o(i.AVRCP_CtGetMediaInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AVRCP_CtGetMediaInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNodeOnList (via Veneer)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreBE32
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_ct_get_media_info
</UL>

<P><STRONG><a name="[150]"></a>AVRCP_SetPanelKey_imp</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, avrcp_api.o(i.AVRCP_SetPanelKey_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AVRCP_SetPanelKey_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelInput (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_set_panel_key
</UL>

<P><STRONG><a name="[8e]"></a>AvdtpSigParseCapabilityRsp_imp</STRONG> (Thumb, 376 bytes, Stack size 56 bytes, protocol_patch.o(i.AvdtpSigParseCapabilityRsp_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AvdtpSigParseCapabilityRsp_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[158]"></a>AvrcpHandleAdvRsp_imp</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, app_bt_new.o(i.AvrcpHandleAdvRsp_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = AvrcpHandleAdvRsp_imp &rArr; AvrcpHandleAdvancedResponse_imp &rArr; AvrcpHandleGetElementAttrRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost16 (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvancedResponse_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelRsp_imp
</UL>

<P><STRONG><a name="[15a]"></a>AvrcpHandleAdvancedResponse_imp</STRONG> (Thumb, 292 bytes, Stack size 120 bytes, protocol_patch.o(i.AvrcpHandleAdvancedResponse_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = AvrcpHandleAdvancedResponse_imp &rArr; AvrcpHandleGetElementAttrRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvmCancelTimer (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleGetPlayStatusRsp
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleGetElementAttrRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvRsp_imp
</UL>

<P><STRONG><a name="[15c]"></a>AvrcpHandleGetPlayStatusRsp</STRONG> (Thumb, 72 bytes, Stack size 112 bytes, protocol_patch.o(i.AvrcpHandleGetPlayStatusRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AvrcpHandleGetPlayStatusRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost32 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvancedResponse_imp
</UL>

<P><STRONG><a name="[15e]"></a>AvrcpHandlePanelRsp_imp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_bt_new.o(i.AvrcpHandlePanelRsp_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = AvrcpHandlePanelRsp_imp &rArr; AvrcpHandleAdvRsp_imp &rArr; AvrcpHandleAdvancedResponse_imp &rArr; AvrcpHandleGetElementAttrRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemCmp
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelRsp (via Veneer)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvRsp_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback_imp
</UL>

<P><STRONG><a name="[160]"></a>BTSTACK_ClientDisconnect</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, obxbtstk.o(i.BTSTACK_ClientDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BTSTACK_ClientDisconnect &rArr; BtDisconnectClientLink &rArr; OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CloseChannel
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_IsLinkUp (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_TpDisconnect
</UL>

<P><STRONG><a name="[164]"></a>BTSTACK_ClientInit</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, obxbtstk.o(i.BTSTACK_ClientInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_RegisterGlobalHandler
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_RegisterHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_ClientInit
</UL>

<P><STRONG><a name="[17f]"></a>DDB_AddRecord_imp</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, protocol_patch.o(i.DDB_AddRecord_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DDB_AddRecord_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS_DeleteDevice (via Veneer)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDB_find_max_prior (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AddDeviceRecord_imp
</UL>

<P><STRONG><a name="[1c7]"></a>FindPbapClient</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, pbap.o(i.FindPbapClient))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAPOBS_Write
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback
</UL>

<P><STRONG><a name="[182]"></a>GOEP_Connect</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, goep.o(i.GOEP_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = GOEP_Connect &rArr; ClientBuildHeaders &rArr; OBEXH_BuildUnicode &rArr; OBEXH_BuildByteSeq &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientBuildProtocolHeader
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_FlushHeaders
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientSecAccessRequest
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback
</UL>

<P><STRONG><a name="[187]"></a>GOEP_GetConnectionId</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, goep.o(i.GOEP_GetConnectionId))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GOEP_GetConnectionId &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
</UL>

<P><STRONG><a name="[188]"></a>GOEP_Init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, goep.o(i.GOEP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GOEP_Init &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_bt_profile_init_end
</UL>

<P><STRONG><a name="[189]"></a>GOEP_RegisterClientSecurityRecord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, goep.o(i.GOEP_RegisterClientSecurityRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GOEP_RegisterClientSecurityRecord &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Register
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
</UL>

<P><STRONG><a name="[18b]"></a>GOEP_RegisterClnt</STRONG> (Thumb, 474 bytes, Stack size 32 bytes, goep.o(i.GOEP_RegisterClnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GOEP_RegisterClnt &rArr; OBEX_ClientInit &rArr; OBSTACK_ClientInit &rArr; BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Register
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreeConnId
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_EnumTransports
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
</UL>

<P><STRONG><a name="[18f]"></a>GOEP_TpDisconnect</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, goep.o(i.GOEP_TpDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GOEP_TpDisconnect &rArr; OBEX_TpDisconnect &rArr; BTSTACK_ClientDisconnect &rArr; BtDisconnectClientLink &rArr; OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_TpDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback
</UL>

<P><STRONG><a name="[6]"></a>GoepSecCallback</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, goep.o(i.GoepSecCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GoepSecCallback &rArr; NotifyCurrClient
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrServer
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrClient
</UL>
<BR>[Address Reference Count : 3]<UL><LI> goep.o(i.GOEP_RegisterClientSecurityRecord)
<LI> goep.o(i.GOEP_RegisterClnt)
<LI> goep.o(i.GoepClientSecAccessRequest)
</UL>
<P><STRONG><a name="[19a]"></a>HID_Register_app</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, hid_app.o(i.HID_Register_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HID_Register_app &rArr; HidRegisterSdp_app
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Unregister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Register
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_RegisterPsm (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNodeOnList (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_RegisterHandler (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_UnlockStack
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_LockStack
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HidRegisterSdp_app
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[11]"></a>HfRfCallback_imp</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, app_bt_new.o(i.HfRfCallback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HfRfCallback_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RemoteDevice
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfRfCallback (via Veneer)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfFindChannel (via Veneer)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
<LI> app_bt_new.o(i.bt_set_a2dp_type)
</UL>
<P><STRONG><a name="[8b]"></a>HfStateConnPending_imp</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, protocol_patch.o(i.HfStateConnPending_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HfStateConnPending_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CloseChannel
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfAppCallback (via Veneer)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AtSendCommand (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[19c]"></a>HidRegisterSdp_app</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, hid_app.o(i.HidRegisterSdp_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HidRegisterSdp_app
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDP_AddRecord
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
</UL>

<P><STRONG><a name="[87]"></a>L2CAP_HciReceive_imp</STRONG> (Thumb, 648 bytes, Stack size 72 bytes, protocol_patch.o(i.L2CAP_HciReceive_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = L2CAP_HciReceive_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeMapHciToRemoteDevice
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEtoHost16
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2Cap_ProcessRsp (via Veneer)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2Cap_ProcessReq (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2Cap_NotifyPsm (via Veneer)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2Cap_GetValidChannel (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[17d]"></a>OBEXH_Build1Byte</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, obheader.o(i.OBEXH_Build1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBEXH_Build1Byte &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObIsHeaderSpaceAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
</UL>

<P><STRONG><a name="[17e]"></a>OBEXH_Build4Byte</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, obheader.o(i.OBEXH_Build4Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBEXH_Build4Byte &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreBE32
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObIsHeaderSpaceAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
</UL>

<P><STRONG><a name="[17c]"></a>OBEXH_BuildByteSeq</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, obheader.o(i.OBEXH_BuildByteSeq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OBEXH_BuildByteSeq &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObIsHeaderSpaceAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildUnicode
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
</UL>

<P><STRONG><a name="[17a]"></a>OBEXH_BuildUnicode</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, obheader.o(i.OBEXH_BuildUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OBEXH_BuildUnicode &rArr; OBEXH_BuildByteSeq &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
</UL>

<P><STRONG><a name="[184]"></a>OBEXH_FlushHeaders</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, obheader.o(i.OBEXH_FlushHeaders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OBEXH_FlushHeaders &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
</UL>

<P><STRONG><a name="[17b]"></a>OBEXH_GetAvailableTxHeaderLen</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, obheader.o(i.OBEXH_GetAvailableTxHeaderLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OBEXH_GetAvailableTxHeaderLen &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserMaxHbSize
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
</UL>

<P><STRONG><a name="[183]"></a>OBEX_ClientBuildProtocolHeader</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, obclient.o(i.OBEX_ClientBuildProtocolHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBEX_ClientBuildProtocolHeader &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreBE32
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyClientAppHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
</UL>

<P><STRONG><a name="[18e]"></a>OBEX_ClientInit</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, obclient.o(i.OBEX_ClientInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OBEX_ClientInit &rArr; OBSTACK_ClientInit &rArr; BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSetInitState
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyClientAppHandle
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_ClientInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
</UL>

<P><STRONG><a name="[186]"></a>OBEX_ClientSendRequest</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, obclient.o(i.OBEX_ClientSendRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = OBEX_ClientSendRequest &rArr; ObClientSendCommand &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSetInitState
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyClientAppHandle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_IsConnectionUp
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserMaxHbSize
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientSendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepSecCallback
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
</UL>

<P><STRONG><a name="[18d]"></a>OBEX_EnumTransports</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, obstack.o(i.OBEX_EnumTransports))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_ClientInit
</UL>

<P><STRONG><a name="[194]"></a>OBEX_GetTpConnInfo</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, obstack.o(i.OBEX_GetTpConnInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBEX_GetTpConnInfo &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientSecAccessRequest
</UL>

<P><STRONG><a name="[1b0]"></a>OBEX_Init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, obstack.o(i.OBEX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OBEX_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_UnlockStack
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_LockStack
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_bt_profile_init_end
</UL>

<P><STRONG><a name="[199]"></a>OBEX_ServerAbort</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, observer.o(i.OBEX_ServerAbort))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBEX_ServerAbort &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyServerAppHandle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_IsConnectionUp
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepSecCallback
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrServer
</UL>

<P><STRONG><a name="[157]"></a>OBEX_ServerGetConnInfo</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, observer.o(i.OBEX_ServerGetConnInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OBEX_ServerGetConnInfo &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateServer
</UL>

<P><STRONG><a name="[1a8]"></a>OBEX_ServerSendResponse</STRONG> (Thumb, 290 bytes, Stack size 8 bytes, observer.o(i.OBEX_ServerSendResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = OBEX_ServerSendResponse &rArr; ObServerSendResponse &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyServerAppHandle
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelOperation
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerSendResponse
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserMaxHbSize
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrServer
</UL>

<P><STRONG><a name="[190]"></a>OBEX_TpDisconnect</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, obstack.o(i.OBEX_TpDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OBEX_TpDisconnect &rArr; BTSTACK_ClientDisconnect &rArr; BtDisconnectClientLink &rArr; OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserDisconnectInd
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_TpDisconnect
</UL>

<P><STRONG><a name="[16c]"></a>OBPROT_Connected</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, obstack.o(i.OBPROT_Connected))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OBPROT_Connected
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[173]"></a>OBPROT_Disconnected</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, obstack.o(i.OBPROT_Disconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserDisconnectInd
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCmgrCallback
</UL>

<P><STRONG><a name="[16e]"></a>OBPROT_ParseRx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, obstack.o(i.OBPROT_ParseRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OBPROT_ParseRx &rArr; ObParseRx &rArr; ObParserDisconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParseRx
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[16a]"></a>OBPROT_ReturnTxBuffer</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, obstack.o(i.OBPROT_ReturnTxBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OBPROT_ReturnTxBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_SendTxBuffer
</UL>

<P><STRONG><a name="[170]"></a>OBPROT_TxDone</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, obstack.o(i.OBPROT_TxDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = OBPROT_TxDone &rArr; ObParserTxDone &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxDone
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[1ac]"></a>OBSTACK_ClientInit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, obstack.o(i.OBSTACK_ClientInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OBSTACK_ClientInit &rArr; BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientInit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_VerifyClientAppHandle
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_EnumTransports
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit
</UL>

<P><STRONG><a name="[1b8]"></a>OBSTACK_GetTxBuffer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, obstack.o(i.OBSTACK_GetTxBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OBSTACK_GetTxBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHeadList
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1ae]"></a>OBSTACK_IsConnectionUp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, obstack.o(i.OBSTACK_IsConnectionUp))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
</UL>

<P><STRONG><a name="[1ab]"></a>OBSTACK_VerifyClientAppHandle</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, obstack.o(i.OBSTACK_VerifyClientAppHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OBSTACK_VerifyClientAppHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNodeOnList (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientBuildProtocolHeader
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_ClientInit
</UL>

<P><STRONG><a name="[1b1]"></a>OBSTACK_VerifyServerAppHandle</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, obstack.o(i.OBSTACK_VerifyServerAppHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OBSTACK_VerifyServerAppHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNodeOnList (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
</UL>

<P><STRONG><a name="[16b]"></a>OS_LockObex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, obxalloc.o(i.OS_LockObex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_LockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_LockStack
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_Init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerGetConnInfo
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientBuildProtocolHeader
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_GetAvailableTxHeaderLen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_FlushHeaders
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build4Byte
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build1Byte
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_TpDisconnect
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClientSecurityRecord
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_GetConnectionId
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_TpDisconnect
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_GetTpConnInfo
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCmgrCallback
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[171]"></a>OS_UnlockObex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, obxalloc.o(i.OS_UnlockObex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_UnlockStack
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_Init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerGetConnInfo
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientBuildProtocolHeader
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_GetAvailableTxHeaderLen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_FlushHeaders
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build4Byte
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build1Byte
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_TpDisconnect
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClientSecurityRecord
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_GetConnectionId
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_TpDisconnect
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_GetTpConnInfo
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCmgrCallback
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[b]"></a>ObClientEventInd</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, obclient.o(i.ObClientEventInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ObClientEventInd &rArr; ClientComplete
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost32 (via Veneer)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserDisconnect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientComplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obclient.o(i.OBEX_ClientInit)
</UL>
<P><STRONG><a name="[1c1]"></a>ObClientGetHeaderBlockLen</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, obclient.o(i.ObClientGetHeaderBlockLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ObClientGetHeaderBlockLen
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1bc]"></a>ObClientReadHeaderBlock</STRONG> (Thumb, 472 bytes, Stack size 32 bytes, obclient.o(i.ObClientReadHeaderBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ObClientReadHeaderBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1c3]"></a>ObClientReadHeaderBlockFlex</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, obclient.o(i.ObClientReadHeaderBlockFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ObClientReadHeaderBlockFlex
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1af]"></a>ObClientSendCommand</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, obparse.o(i.ObClientSendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ObClientSendCommand &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessPutEvents
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGetEvents
</UL>

<P><STRONG><a name="[1a9]"></a>ObIsHeaderSpaceAvail</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, obheader.o(i.ObIsHeaderSpaceAvail))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserMaxHbSize
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build4Byte
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build1Byte
</UL>

<P><STRONG><a name="[1b5]"></a>ObParseRx</STRONG> (Thumb, 756 bytes, Stack size 32 bytes, obparse.o(i.ObParseRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ObParseRx &rArr; ObParserDisconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost16 (via Veneer)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseHeaderType
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_ParseRx
</UL>

<P><STRONG><a name="[1bb]"></a>ObParserDisconnect</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, obparse.o(i.ObParserDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ObParserDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParseRx
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientEventInd
</UL>

<P><STRONG><a name="[1b4]"></a>ObParserDisconnectInd</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, obparse.o(i.ObParserDisconnectInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSetInitState
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_Disconnected
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_TpDisconnect
</UL>

<P><STRONG><a name="[1aa]"></a>ObParserMaxHbSize</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, obparse.o(i.ObParserMaxHbSize))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_GetAvailableTxHeaderLen
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGet
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObIsHeaderSpaceAvail
</UL>

<P><STRONG><a name="[1ad]"></a>ObParserSetInitState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, obparse.o(i.ObParserSetInitState))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientSendRequest
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ClientInit
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxDone
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserDisconnectInd
</UL>

<P><STRONG><a name="[1b6]"></a>ObParserTxBuffAvail</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, obparse.o(i.ObParserTxBuffAvail))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_GetTxBuffer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerReadHeaderBlock
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerGetHeaderBlockLen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserDisconnect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientReadHeaderBlock
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientGetHeaderBlockLen
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_TxDone
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1b7]"></a>ObParserTxDone</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, obparse.o(i.ObParserTxDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ObParserTxDone &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSetInitState
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_TxDone
</UL>

<P><STRONG><a name="[1c0]"></a>ObServerGetHeaderBlockLen</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, observer.o(i.ObServerGetHeaderBlockLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ObServerGetHeaderBlockLen
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1c4]"></a>ObServerReadHeaderBlock</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, observer.o(i.ObServerReadHeaderBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ObServerReadHeaderBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1c2]"></a>ObServerReadHeaderBlockFlex</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, observer.o(i.ObServerReadHeaderBlockFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ObServerReadHeaderBlockFlex
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>

<P><STRONG><a name="[1b3]"></a>ObServerSendResponse</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, obparse.o(i.ObServerSendResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ObServerSendResponse &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserSendPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
</UL>

<P><STRONG><a name="[1c5]"></a>PBAPOBS_Close</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, pbapobs.o(i.PBAPOBS_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PBAPOBS_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PbapGoepClientCallback
</UL>

<P><STRONG><a name="[3f]"></a>PBAPOBS_GetObjectLen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pbapobs.o(i.PBAPOBS_GetObjectLen))
<BR>[Address Reference Count : 1]<UL><LI> pbap.o(.constdata)
</UL>
<P><STRONG><a name="[1c6]"></a>PBAPOBS_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pbapobs.o(i.PBAPOBS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PBAPOBS_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_Init
</UL>

<P><STRONG><a name="[3d]"></a>PBAPOBS_Read</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pbapobs.o(i.PBAPOBS_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PBAPOBS_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pbap.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>PBAPOBS_ReadFlex</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, pbapobs.o(i.PBAPOBS_ReadFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PBAPOBS_ReadFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pbap.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>PBAPOBS_Write</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, pbapobs.o(i.PBAPOBS_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PBAPOBS_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindPbapClient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pbap.o(.constdata)
</UL>
<P><STRONG><a name="[1c8]"></a>PBAP_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pbap.o(i.PBAP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PBAP_Init &rArr; PBAPOBS_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAPOBS_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_bt_profile_init_end
</UL>

<P><STRONG><a name="[1c9]"></a>PBAP_RegisterClnt</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, pbap.o(i.PBAP_RegisterClnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PBAP_RegisterClnt &rArr; GOEP_RegisterClnt &rArr; OBEX_ClientInit &rArr; OBSTACK_ClientInit &rArr; BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PceAddServiceRecord
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClientSecurityRecord
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_GetConnectionId
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBA_ClientInit
</UL>

<P><STRONG><a name="[1cb]"></a>PBA_ClientInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pbap_app.o(i.PBA_ClientInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PBA_ClientInit &rArr; PBAP_RegisterClnt &rArr; GOEP_RegisterClnt &rArr; OBEX_ClientInit &rArr; OBSTACK_ClientInit &rArr; BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_bt_profile_init_end
</UL>

<P><STRONG><a name="[1ca]"></a>PceAddServiceRecord</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pbap_sdp.o(i.PceAddServiceRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PceAddServiceRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDP_AddRecord
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_RegisterClnt
</UL>

<P><STRONG><a name="[5b]"></a>ProcessGeneral</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, observer.o(i.ProcessGeneral))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ProcessGeneral &rArr; AssociateConn
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateConn
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxalloc.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>ProcessGet</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, observer.o(i.ProcessGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ProcessGet &rArr; AssociateConn
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelOperation
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateConn
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppCallback
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserMaxHbSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxalloc.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>ProcessGetEvents</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, obclient.o(i.ProcessGetEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ProcessGetEvents &rArr; ObClientSendCommand &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientSendCommand
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientComplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxalloc.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>ProcessPut</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, observer.o(i.ProcessPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ProcessPut &rArr; AssociateConn
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelOperation
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateConn
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxalloc.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>ProcessPutEvents</STRONG> (Thumb, 422 bytes, Stack size 16 bytes, obclient.o(i.ProcessPutEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ProcessPutEvents &rArr; ObClientSendCommand &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientSendCommand
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientComplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxalloc.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>ProcessSimpleOpEvents</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, obclient.o(i.ProcessSimpleOpEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ProcessSimpleOpEvents &rArr; ClientComplete
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientComplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxalloc.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>RfAdvanceIncomingToOpenState_imp</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, protocol_patch.o(i.RfAdvanceIncomingToOpenState_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RfAdvanceIncomingToOpenState_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[1cd]"></a>RfAdvanceToOpenTimeoutHandler_imp</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, protocol_patch.o(i.RfAdvanceToOpenTimeoutHandler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RfAdvanceToOpenTimeoutHandler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfSendModemStatus
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfFreeDLC
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAppCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rfcomm_open_to_handler
</UL>

<P><STRONG><a name="[1d1]"></a>SEC_AddDeviceRecord_imp</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, protocol_patch.o(i.SEC_AddDeviceRecord_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SEC_AddDeviceRecord_imp &rArr; DDB_AddRecord_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS_FindDevice (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_UnlockStack
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OS_LockStack
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DDB_AddRecord_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleLinkKeyNotify_imp
</UL>

<P><STRONG><a name="[1d3]"></a>SecHandleConfirmReq_imp</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, protocol_patch.o(i.SecHandleConfirmReq_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SecHandleConfirmReq_imp &rArr; SecHandleUserIoReq_imp &rArr; SecGetCurrentBondingMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecBtGetFreeSecurityOp
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeStartOperation
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_FindRemoteDeviceP
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEtoHost32
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertHeadList
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_handler_imp
</UL>

<P><STRONG><a name="[1da]"></a>SecHandleLinkKeyNotify_imp</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, protocol_patch.o(i.SecHandleLinkKeyNotify_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SecHandleLinkKeyNotify_imp &rArr; SEC_AddDeviceRecord_imp &rArr; DDB_AddRecord_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_FindRemoteDeviceP
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AddDeviceRecord_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_handler_imp
</UL>

<P><STRONG><a name="[1d6]"></a>SecHandleUserIoReq_imp</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, protocol_patch.o(i.SecHandleUserIoReq_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SecHandleUserIoReq_imp &rArr; SecGetCurrentBondingMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecGetPinLen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecBtGetFreeSecurityOp
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeStartOperation
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeDisconnectLink
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeDevEventHandler
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_FindRemoteDeviceP
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertHeadList
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecGetCurrentBondingMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
</UL>

<P><STRONG><a name="[82]"></a>SecProcessSecurityToken_imp</STRONG> (Thumb, 754 bytes, Stack size 24 bytes, protocol_patch.o(i.SecProcessSecurityToken_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SecProcessSecurityToken_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecBtGetFreeSecurityOp
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecAddAuthenticateOpToQueue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertTailList
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertHeadList
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecIsCurrentSecurityGoodEnough
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>a2dp_callback_imp</STRONG> (Thumb, 916 bytes, Stack size 80 bytes, app_bt_new.o(i.a2dp_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = a2dp_callback_imp &rArr; ipc_msg_with_payload_send
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_get_buffer_offset
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_with_payload_send (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_insert_msg
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_alloc_channel
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_GetBdAddr
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_GetRemoteDevice (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_subfront
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
<LI> app_bt_new.o(i.bt_set_a2dp_type)
</UL>
<P><STRONG><a name="[12e]"></a>a2dp_close_stream</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, a2dp_api.o(i.a2dp_close_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = a2dp_close_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpCloseStream (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_disconnect
</UL>

<P><STRONG><a name="[123]"></a>a2dp_open_stream</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, a2dp_api.o(i.a2dp_open_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = a2dp_open_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVDEV_CreateSignalLink (via Veneer)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVDEV_CreateACLLink (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reconnect_according_to_profile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[1e8]"></a>a2dp_start_discover</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_bt_new.o(i.a2dp_start_discover))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = a2dp_start_discover
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
</UL>

<P><STRONG><a name="[124]"></a>a2dp_start_stream</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, a2dp_api.o(i.a2dp_start_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = a2dp_start_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVDTP_StartStream (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[11a]"></a>a2dp_suspend_stream</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, a2dp_api.o(i.a2dp_suspend_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = a2dp_suspend_stream
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVDTP_SuspendStream (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[1ec]"></a>app_act_created_ind_func</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_proj_event.o(i.app_act_created_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_act_created_ind_func &rArr; ble_add_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_add_svc
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_db_init_complete_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
</UL>

<P><STRONG><a name="[217]"></a>app_act_deleted_ind_func</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, app_proj_event.o(i.app_act_deleted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_act_deleted_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
</UL>

<P><STRONG><a name="[265]"></a>app_addr_resolve_result_ind_func</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, app_proj_event.o(i.app_addr_resolve_result_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_addr_resolve_result_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_solved_ind_handler
</UL>

<P><STRONG><a name="[212]"></a>app_adv_complete_ind_func</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, app_proj_event.o(i.app_adv_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_adv_complete_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[266]"></a>app_adv_report_ind_func</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, app_proj_event.o(i.app_adv_report_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_adv_report_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_ext_adv_report_ind_handler
</UL>

<P><STRONG><a name="[1ef]"></a>app_avdev_find_prefer_codec</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, app_bt_new.o(i.app_avdev_find_prefer_codec))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_avdev_find_prefer_codec
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
</UL>

<P><STRONG><a name="[238]"></a>app_avdev_search_free_stream</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_bt_new.o(i.app_avdev_search_free_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_avdev_search_free_stream
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
</UL>

<P><STRONG><a name="[1f0]"></a>app_bt_init_imp</STRONG> (Thumb, 628 bytes, Stack size 8 bytes, app_bt_new.o(i.app_bt_init_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_bt_init_imp &rArr; A2DP_Register_imp &rArr; A2dpRegisterSdpService_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_SetIoCapabilities
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_SetBondingMode
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_RegisterPairingHandler
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_RegisterAuthorizeHandler
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_SetEventMask
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_SetDefaultLinkPolicy
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_RegisterGlobalHandler
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_RegisterSec (via Veneer)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_RegisterSec (via Veneer)
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_register_imp
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_Register_app
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[21c]"></a>app_conn_complete_ind_func</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, app_proj_event.o(i.app_conn_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_conn_complete_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[25e]"></a>app_connection_master_encrypt_compeleted_ind_func</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_proj_event.o(i.app_connection_master_encrypt_compeleted_ind_func))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[258]"></a>app_connection_master_encrypted_ind_func</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_master_encrypted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_connection_master_encrypted_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[257]"></a>app_connection_paring_info_ind_func</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_paring_info_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_connection_paring_info_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[1fa]"></a>app_connection_req_ind_func</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_req_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_connection_req_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_enable_prf
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[259]"></a>app_connection_slave_encrypted_ind_func</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_slave_encrypted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_connection_slave_encrypted_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[1fc]"></a>app_connection_success_ind_func</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_success_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_connection_success_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[1ee]"></a>app_db_init_complete_ind_func</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_proj_event.o(i.app_db_init_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_db_init_complete_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[261]"></a>app_disconnect_ind_func</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, app_proj_event.o(i.app_disconnect_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_disconnect_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>

<P><STRONG><a name="[94]"></a>app_entry_sub</STRONG> (Thumb, 846 bytes, Stack size 32 bytes, patch.o(i.app_entry_sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_entry_sub &rArr; pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pskeys_update_app_data
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_stack_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_custom_parameters
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Init (via Veneer)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvmInitTimer (via Veneer)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVM_Init (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand (via Veneer)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_init
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_profile_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority_imp (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_BASEPRI
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_func (via Veneer)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch (via Veneer)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry
</UL>

<P><STRONG><a name="[264]"></a>app_get_info_ind_func</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, app_proj_event.o(i.app_get_info_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_get_info_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_peer_features_ind_handler
</UL>

<P><STRONG><a name="[225]"></a>app_per_sync_completed_ind_func</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, app_proj_event.o(i.app_per_sync_completed_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_per_sync_completed_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[208]"></a>app_reset_complete_ind_func</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_proj_event.o(i.app_reset_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_reset_complete_ind_func &rArr; user_entry_after_stack_init &rArr; user_task_init &rArr; os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[227]"></a>app_scanning_completed_ind_func</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, app_proj_event.o(i.app_scanning_completed_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_scanning_completed_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
</UL>

<P><STRONG><a name="[20a]"></a>app_set_dev_config_complete_ind_func</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_proj_event.o(i.app_set_dev_config_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_set_dev_config_complete_ind_func &rArr; appm_create_adv_act &rArr; appm_create_per_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scan_act
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_sync_act
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_conn_act
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[267]"></a>app_svc_added_ind_func</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_proj_event.o(i.app_svc_added_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_svc_added_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
</UL>

<P><STRONG><a name="[25d]"></a>app_update_params_complete_ind_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_proj_event.o(i.app_update_params_complete_ind_func))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[25c]"></a>app_update_params_rejected_ind_func</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, app_proj_event.o(i.app_update_params_rejected_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_update_params_rejected_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[223]"></a>app_update_params_update_ind_func</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, app_proj_event.o(i.app_update_params_update_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_update_params_update_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[254]"></a>appm_adv_get_defer_op</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ble_new.o(i.appm_adv_get_defer_op))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
</UL>

<P><STRONG><a name="[21]"></a>appm_adv_recv_gapm_cmp</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, app_ble_new.o(i.appm_adv_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = appm_adv_recv_gapm_cmp &rArr; gap_start_advertising &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_complete_ind_func
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 5]<UL><LI> gap_api.o(i.gap_start_advertising)
<LI> gap_api.o(i.gap_stop_advertising)
<LI> app_ble_new.o(i.appm_set_advertising_data)
<LI> app_ble_new.o(i.appm_set_per_adv_data)
<LI> app_ble_new.o(i.appm_set_scan_response_data)
</UL>
<P><STRONG><a name="[255]"></a>appm_adv_set_defer_op</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_ble_new.o(i.appm_adv_set_defer_op))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
</UL>

<P><STRONG><a name="[218]"></a>appm_ble_conn_param_update</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, app_ble_new.o(i.appm_ble_conn_param_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = appm_ble_conn_param_update
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_update_conn_param_handler_imp
</UL>

<P><STRONG><a name="[206]"></a>appm_ble_init_imp</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, app_ble_new.o(i.appm_ble_init_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_ble_init_imp &rArr; appm_send_gapm_reset_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_send_gapm_reset_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[2e]"></a>appm_ble_update_conn_param_handler_imp</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, patch.o(i.appm_ble_update_conn_param_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = appm_ble_update_conn_param_handler_imp &rArr; appm_ble_conn_param_update
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_conn_param_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[21b]"></a>appm_conn_recv_gapm_cmp</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app_conn.o(i.appm_conn_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = appm_conn_recv_gapm_cmp &rArr; app_act_created_ind_func &rArr; ble_add_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_complete_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[20c]"></a>appm_create_adv_act</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_ble_new.o(i.appm_create_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appm_create_adv_act &rArr; appm_create_per_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_adv_act
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_legacy_adv_act
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_aux_adv_act
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[21f]"></a>appm_create_aux_adv_act</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_create_aux_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_aux_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>

<P><STRONG><a name="[20e]"></a>appm_create_conn_act</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_conn.o(i.appm_create_conn_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_conn_act
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[21d]"></a>appm_create_legacy_adv_act</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_create_legacy_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_legacy_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>

<P><STRONG><a name="[21e]"></a>appm_create_per_adv_act</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_create_per_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_per_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>

<P><STRONG><a name="[20b]"></a>appm_create_per_sync_act</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_ble_new.o(i.appm_create_per_sync_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_create_per_sync_act
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[20d]"></a>appm_create_scan_act</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_create_scan_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_scan_act
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[220]"></a>appm_exc_activity_cmp</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_exc_activity_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_exc_activity_cmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[221]"></a>appm_execute_activity_cmd</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_ble_new.o(i.appm_execute_activity_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
</UL>

<P><STRONG><a name="[224]"></a>appm_period_sync_recv_gapm_cmp</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_period_sync_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = appm_period_sync_recv_gapm_cmp &rArr; app_per_sync_completed_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_completed_ind_func
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[226]"></a>appm_scan_recv_gapm_cmp</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_scan_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = appm_scan_recv_gapm_cmp &rArr; app_scanning_completed_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scanning_completed_ind_func
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[213]"></a>appm_set_advertising_data</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_set_advertising_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = appm_set_advertising_data &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[215]"></a>appm_set_per_adv_data</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_set_per_adv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = appm_set_per_adv_data &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[214]"></a>appm_set_scan_response_data</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_ble_new.o(i.appm_set_scan_response_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = appm_set_scan_response_data &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[111]"></a>ascii_strn2val</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, sys_utils.o(i.ascii_strn2val))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ascii_strn2val
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_char2val
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[229]"></a>attm_svc_create_db_ext</STRONG> (Thumb, 538 bytes, Stack size 56 bytes, gatt_api.o(i.attm_svc_create_db_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = attm_svc_create_db_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[38]"></a>audio_codec_buildin_sbc_imp</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, audio_codec_new.o(i.audio_codec_buildin_sbc_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = audio_codec_buildin_sbc_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_tone_reg_config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_decoder_mono_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[22b]"></a>audio_codec_clear_state_imp</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, audio_codec_new.o(i.audio_codec_clear_state_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digital_codec_init_imp (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_decoder_clear_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sco_handler_imp
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sbc_handler_imp
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_native_playback_handler_imp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_only_handler_imp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_loop_handler_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
</UL>

<P><STRONG><a name="[35]"></a>audio_codec_mic_loop_handler_imp</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, audio_codec_new.o(i.audio_codec_mic_loop_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_codec_mic_loop_handler_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mic_loop_reg_config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[36]"></a>audio_codec_mic_only_handler_imp</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, audio_codec_new.o(i.audio_codec_mic_only_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_codec_mic_only_handler_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mic_only_reg_config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[37]"></a>audio_codec_native_playback_handler_imp</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, audio_codec_new.o(i.audio_codec_native_playback_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_codec_native_playback_handler_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_native_playback_reg_config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[31]"></a>audio_codec_off_handler_imp</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, audio_codec_new.o(i.audio_codec_off_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_codec_off_handler_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_off_reg_config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digital_codec_init_imp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[32]"></a>audio_codec_sbc_handler_imp</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, audio_codec_new.o(i.audio_codec_sbc_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_codec_sbc_handler_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_sbc_reg_config
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_aac_reg_config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[34]"></a>audio_codec_sco_handler_imp</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, audio_codec_new.o(i.audio_codec_sco_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_codec_sco_handler_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[33]"></a>audio_codec_tone_handler_imp</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, audio_codec_new.o(i.audio_codec_tone_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = audio_codec_tone_handler_imp &rArr; audio_codec_clear_state_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_prepare_tone
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_tone_reg_config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_decoder_mono_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[14]"></a>avctp_callback_imp</STRONG> (Thumb, 146 bytes, Stack size 120 bytes, app_bt_new.o(i.avctp_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = avctp_callback_imp &rArr; AvrcpHandlePanelRsp_imp &rArr; AvrcpHandleAdvRsp_imp &rArr; AvrcpHandleAdvancedResponse_imp &rArr; AvrcpHandleGetElementAttrRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelInput (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandlePanelRsp_imp
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
<LI> app_bt_new.o(i.bt_set_a2dp_type)
</UL>
<P><STRONG><a name="[d]"></a>avdev_callback_imp</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, app_bt_new.o(i.avdev_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = avdev_callback_imp &rArr; app_avdev_find_prefer_codec
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_get_a2dp_type
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVDEV_SignalConnectRsp (via Veneer)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2dpSetStreamConfig (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avdev_search_free_stream
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avdev_find_prefer_codec
</UL>
<BR>[Address Reference Count : 4]<UL><LI> app_bt_new.o(i.a2dp_start_discover)
<LI> app_bt_new.o(i.app_bt_init_imp)
<LI> app_bt_new.o(i.avdev_callback_imp)
<LI> a2dp_api.o(i.a2dp_open_stream)
</UL>
<P><STRONG><a name="[13]"></a>avrcp_callback_imp</STRONG> (Thumb, 406 bytes, Stack size 136 bytes, app_bt_new.o(i.avrcp_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = avrcp_callback_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_GetBdAddr
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVCTP_RemoteDevice (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_free
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
<LI> app_bt_new.o(i.bt_set_a2dp_type)
</UL>
<P><STRONG><a name="[126]"></a>avrcp_ct_get_media_info</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, avrcp_api.o(i.avrcp_ct_get_media_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = avrcp_ct_get_media_info &rArr; AVRCP_CtGetMediaInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_malloc_cmd
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_free
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_CtGetMediaInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[12d]"></a>avrcp_disconnect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, avrcp_api.o(i.avrcp_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = avrcp_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_Disconnect (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_disconnect
</UL>

<P><STRONG><a name="[115]"></a>avrcp_set_panel_key</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, avrcp_api.o(i.avrcp_set_panel_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = avrcp_set_panel_key &rArr; AVRCP_SetPanelKey_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_SetPanelKey_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>

<P><STRONG><a name="[133]"></a>avrcp_tg_set_absolute_volume</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, avrcp_api.o(i.avrcp_tg_set_absolute_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = avrcp_tg_set_absolute_volume
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_TgSetAbsoluteVolume (via Veneer)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_malloc_cmd
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_spk_volume
</UL>

<P><STRONG><a name="[1ed]"></a>ble_add_svc</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_ble_new.o(i.ble_add_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_add_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[242]"></a>ble_bond_check</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, user_bond_manage.o(i.ble_bond_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_bond_check &rArr; ble_sec_init &rArr; get_stored_info_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_evt_func
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[209]"></a>ble_gap_set_dev_config</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_ble_new.o(i.ble_gap_set_dev_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_set_dev_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_reset_complete_ind_func
</UL>

<P><STRONG><a name="[244]"></a>ble_sec_check_ediv_rand</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_sec.o(i.ble_sec_check_ediv_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sec_check_ediv_rand
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
</UL>

<P><STRONG><a name="[260]"></a>ble_sec_get_bond_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sec.o(i.ble_sec_get_bond_status))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[240]"></a>ble_sec_init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, app_sec.o(i.ble_sec_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_sec_init &rArr; get_stored_info_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stored_info_req
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[243]"></a>ble_sec_resolve_address</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_sec.o(i.ble_sec_resolve_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_sec_resolve_address
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[241]"></a>ble_set_evt_func</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_ble_new.o(i.ble_set_evt_func))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[11b]"></a>bt_cancel_inquiry</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bt_api.o(i.bt_cancel_inquiry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_cancel_inquiry
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_CancelInquiry
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[118]"></a>bt_get_a2dp_type</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, a2dp_api.o(i.bt_get_a2dp_type))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdev_callback_imp
</UL>

<P><STRONG><a name="[11e]"></a>bt_get_current_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt_api.o(i.bt_get_current_mode))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[12f]"></a>bt_get_last_device</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, bt_api.o(i.bt_get_last_device))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_reconnect
</UL>

<P><STRONG><a name="[f7]"></a>bt_notify_error_func</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf_patch.o(i.bt_notify_error_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_notify_error_func
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_isr_imp (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_imp (via Veneer)
</UL>

<P><STRONG><a name="[2b5]"></a>bt_notify_name_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_api.o(i.bt_notify_name_func))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
</UL>

<P><STRONG><a name="[119]"></a>bt_set_a2dp_type</STRONG> (Thumb, 680 bytes, Stack size 8 bytes, app_bt_new.o(i.bt_set_a2dp_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bt_set_a2dp_type &rArr; pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pskeys_update_app_data
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_RegisterSec (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Deregister (via Veneer)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_RegisterSec (via Veneer)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVRCP_Deregister (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_util_bch_create
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_class_of_dev_set
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_reset
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Register_imp
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2DP_Deregister_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[11c]"></a>bt_set_accessible_mode_nc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bt_api.o(i.bt_set_accessible_mode_nc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_set_accessible_mode_nc
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_SetAccessibleModeNC
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reconnect_according_to_profile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[117]"></a>bt_start_inquiry</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, bt_api.o(i.bt_start_inquiry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_start_inquiry
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_Inquiry
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[11d]"></a>bt_start_sniff</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bt_api.o(i.bt_start_sniff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_start_sniff
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_StartSniff
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[2c7]"></a>bt_user_confirm_func</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_new.o(i.bt_user_confirm_func))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;security_event_handler_imp
</UL>

<P><STRONG><a name="[7c]"></a>cdc_isr_imp</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, audio_codec_new.o(i.cdc_isr_imp))
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[210]"></a>check_timer_handle</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_timer.o(i.check_timer_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check_timer_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_user_timeout_handler
</UL>

<P><STRONG><a name="[234]"></a>codec_aac_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_aac_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sbc_handler_imp
</UL>

<P><STRONG><a name="[291]"></a>codec_audio_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_audio_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
</UL>

<P><STRONG><a name="[c4]"></a>codec_init_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_init_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_init_imp (via Veneer)
</UL>

<P><STRONG><a name="[230]"></a>codec_mic_loop_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_mic_loop_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_loop_handler_imp
</UL>

<P><STRONG><a name="[231]"></a>codec_mic_only_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_mic_only_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_mic_only_handler_imp
</UL>

<P><STRONG><a name="[232]"></a>codec_native_playback_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_native_playback_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_native_playback_handler_imp
</UL>

<P><STRONG><a name="[233]"></a>codec_off_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_off_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_off_handler_imp
</UL>

<P><STRONG><a name="[235]"></a>codec_sbc_reg_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_sbc_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sbc_handler_imp
</UL>

<P><STRONG><a name="[22d]"></a>codec_tone_reg_config</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_codec_new.o(i.codec_tone_reg_config))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_tone_handler_imp
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_buildin_sbc_imp
</UL>

<P><STRONG><a name="[250]"></a>from_task_func_to_msg_handle</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, os_task.o(i.from_task_func_to_msg_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_build_task_desc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[251]"></a>gap_disconnect_req</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gap_api.o(i.gap_disconnect_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_disconnect_req
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_connect_status
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[252]"></a>gap_get_connect_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_api.o(i.gap_get_connect_status))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
</UL>

<P><STRONG><a name="[262]"></a>gap_get_dev_appearance</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_api.o(i.gap_get_dev_appearance))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[253]"></a>gap_get_dev_name</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gap_api.o(i.gap_get_dev_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_get_dev_name
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[216]"></a>gap_start_advertising</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gap_api.o(i.gap_start_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gap_start_advertising &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[211]"></a>gap_stop_advertising</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, gap_api.o(i.gap_stop_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_stop_advertising &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[25f]"></a>gatt_clear_remote_svc</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gatt_api.o(i.gatt_clear_remote_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_clear_remote_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[26f]"></a>gatt_write_peer_svc_to_flash</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_bond_manage.o(i.gatt_write_peer_svc_to_flash))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[2c4]"></a>get_gatt_default_itf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gatt_api.o(i.get_gatt_default_itf))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get_imp
</UL>

<P><STRONG><a name="[245]"></a>get_stored_info_req</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, app_proj_event.o(i.get_stored_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_stored_info_req
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
</UL>

<P><STRONG><a name="[287]"></a>get_tone_support</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_new.o(i.get_tone_support))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hf_callback_imp
</UL>

<P><STRONG><a name="[263]"></a>hci_disc_cmp_evt_handler_imp</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, patch.o(i.hci_disc_cmp_evt_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_disc_cmp_evt_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_disconect_ind
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_hci_handler_imp
</UL>

<P><STRONG><a name="[2a]"></a>hci_host_tx_data_handler_imp</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, protocol_patch.o(i.hci_host_tx_data_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_host_tx_data_handler_imp &rArr; hci_stack_tx_data_dispatch_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_active
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_stack_tx_data_dispatch_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[29]"></a>hci_nb_cmp_pkts_evt_handler</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, patch.o(i.hci_nb_cmp_pkts_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_nb_cmp_pkts_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_get_nb_buffer_available
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[2b]"></a>hci_rfcomm_close_to_handler</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, protocol_patch.o(i.hci_rfcomm_close_to_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_rfcomm_close_to_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfFreeDLC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[2c]"></a>hci_rfcomm_open_to_handler</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, protocol_patch.o(i.hci_rfcomm_open_to_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_rfcomm_open_to_handler &rArr; RfAdvanceToOpenTimeoutHandler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfAdvanceToOpenTimeoutHandler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[27f]"></a>hci_stack_tx_data_dispatch_imp</STRONG> (Thumb, 1300 bytes, Stack size 48 bytes, protocol_patch.o(i.hci_stack_tx_data_dispatch_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hci_stack_tx_data_dispatch_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_tx_data_received
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_util_buf_acl_tx_alloc
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLE16
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_host_tx_data_handler_imp
</UL>

<P><STRONG><a name="[8a]"></a>hfHandleNegotiateComplete_imp</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, protocol_patch.o(i.hfHandleNegotiateComplete_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hfHandleNegotiateComplete_imp &rArr; hfHandleNegotiateIndFail
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CloseChannel
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfAppCallback (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_IsLinkUp (via Veneer)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AtSendCommand (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateIndFail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[283]"></a>hfHandleNegotiateIndFail</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, protocol_patch.o(i.hfHandleNegotiateIndFail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hfHandleNegotiateIndFail
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CloseChannel
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HfStartServiceQuery (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfHandleNegotiateComplete_imp
</UL>

<P><STRONG><a name="[128]"></a>hf_answer_call</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hf_api.o(i.hf_answer_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hf_answer_call
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_AnswerCall (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[10]"></a>hf_callback_imp</STRONG> (Thumb, 560 bytes, Stack size 56 bytes, app_bt_new.o(i.hf_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hf_callback_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_GetBdAddr
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_GetRemoteBDAddr (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_tone_support
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
<LI> app_bt_new.o(i.bt_set_a2dp_type)
</UL>
<P><STRONG><a name="[137]"></a>hf_connect</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hf_api.o(i.hf_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hf_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CreateServiceLink (via Veneer)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hf_free_channel_index
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reconnect_according_to_profile
</UL>

<P><STRONG><a name="[12c]"></a>hf_disconnect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hf_api.o(i.hf_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hf_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_DisconnectServiceLink (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_disconnect
</UL>

<P><STRONG><a name="[12a]"></a>hf_disconnect_audio_link</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hf_api.o(i.hf_disconnect_audio_link))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hf_disconnect_audio_link
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_DisconnectAudioLink (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_disconnect
</UL>

<P><STRONG><a name="[125]"></a>hf_enable_voice_recognition</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, hf_api.o(i.hf_enable_voice_recognition))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hf_enable_voice_recognition
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_EnableVoiceRecognition (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[129]"></a>hf_hang_up</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hf_api.o(i.hf_hang_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hf_hang_up
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Hangup (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[122]"></a>hf_redial</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hf_api.o(i.hf_redial))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hf_redial
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Redial (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[132]"></a>hf_report_speaker_volume</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, hf_api.o(i.hf_report_speaker_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hf_report_speaker_volume
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ReportSpeakerVolume (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_spk_volume
</UL>

<P><STRONG><a name="[16]"></a>hid_callback_imp</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, app_bt_new.o(i.hid_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hid_callback_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
</UL>
<P><STRONG><a name="[2af]"></a>is_ble_conn_latency_enabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, protocol_patch.o(i.is_ble_conn_latency_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_imp
</UL>

<P><STRONG><a name="[18]"></a>ke_handler_search_get_imp</STRONG> (Thumb, 536 bytes, Stack size 24 bytes, patch.o(i.ke_handler_search_get_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ke_handler_search_get_imp &rArr; user_entry_after_stack_init &rArr; user_task_init &rArr; os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_state
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_version_imp
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_audio_reg_config
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_start_discover
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[39]"></a>lc_lmp_rx_handler_imp</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, protocol_patch.o(i.lc_lmp_rx_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lc_lmp_rx_handler_imp &rArr; lmp_sniff_req_handler_imp &rArr; lc_sniff_peer_request_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_ver_req_handler_imp
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_sniff_req_handler_imp
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_set_afh_handler_imp
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_reats_res_ext_handler_imp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_name_res_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[3a]"></a>lc_op_detach_ind_handler_imp</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, protocol_patch.o(i.lc_op_detach_ind_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lc_op_detach_ind_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_unsniff
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sco_detach
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_detach
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[29b]"></a>lc_send_pdu_vers_req_imp</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, patch.o(i.lc_send_pdu_vers_req_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lc_send_pdu_vers_req_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_lmp
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_version_imp
</UL>

<P><STRONG><a name="[292]"></a>lc_version_imp</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, patch.o(i.lc_version_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lc_version_imp &rArr; lc_send_pdu_vers_req_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_start_lmp_to
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_pdu_vers_req_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_handler_search_get_imp
</UL>

<P><STRONG><a name="[1f]"></a>ld_acl_rx_sync_end_imp</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, patch.o(i.ld_acl_rx_sync_end_imp))
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[84]"></a>ld_acl_start_imp</STRONG> (Thumb, 810 bytes, Stack size 56 bytes, protocol_patch.o(i.ld_acl_start_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ld_acl_start_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_read_clock
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_active_mode_set
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_insert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[2ac]"></a>llc_ll_length_rsp_pdu_send_imp</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, protocol_patch.o(i.llc_ll_length_rsp_pdu_send_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = llc_ll_length_rsp_pdu_send_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_dl_upd_proc_imp
</UL>

<P><STRONG><a name="[88]"></a>llc_rem_dl_upd_proc_imp</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, protocol_patch.o(i.llc_rem_dl_upd_proc_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = llc_rem_dl_upd_proc_imp &rArr; llc_ll_length_rsp_pdu_send_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_data_len_update
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_length_rsp_pdu_send_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[8d]"></a>lld_con_sched_imp</STRONG> (Thumb, 1176 bytes, Stack size 72 bytes, protocol_patch.o(i.lld_con_sched_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lld_con_sched_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc_noint
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_max_lat_calc
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_insert
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_active_check
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ble_conn_latency_enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>lm_get_sync_offset_imp</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, protocol_patch.o(i.lm_get_sync_offset_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lm_get_sync_offset_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_set
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lm_sco_move_en
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>me_callback_imp</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, app_bt_new.o(i.me_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = me_callback_imp &rArr; user_entry_after_stack_init &rArr; user_task_init &rArr; os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2Cap_FreeChannel (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS_DeleteDevice (via Veneer)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHeadList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
</UL>
<P><STRONG><a name="[bb]"></a>os_free</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_mem.o(i.os_free), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_flush (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_msg_sent (via Veneer)
</UL>

<P><STRONG><a name="[2c1]"></a>os_get_free_task_type</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_task.o(i.os_get_free_task_type))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create_x
</UL>

<P><STRONG><a name="[9d]"></a>os_msg_post</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, os_msg_q.o(i.os_msg_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_msg_post
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_uart_recv (via Veneer)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[140]"></a>os_task_create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, os_task.o(i.os_task_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create_x
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task_init
</UL>

<P><STRONG><a name="[2c0]"></a>os_task_create_x</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, os_task.o(i.os_task_create_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_get_free_task_type
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_build_task_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create
</UL>

<P><STRONG><a name="[270]"></a>os_zalloc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, os_mem.o(i.os_zalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_zalloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[17]"></a>pmu_init_imp</STRONG> (Thumb, 1122 bytes, Stack size 16 bytes, pmu_patch.o(i.pmu_init_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pmu_init_imp &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[273]"></a>prf_extract_svc_info_uuid_128</STRONG> (Thumb, 602 bytes, Stack size 88 bytes, gatt_api.o(i.prf_extract_svc_info_uuid_128))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = prf_extract_svc_info_uuid_128
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
</UL>

<P><STRONG><a name="[8c]"></a>prf_itf_get_imp</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, protocol_patch.o(i.prf_itf_get_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_itf_get_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otas_prf_itf_get
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gatt_default_itf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[134]"></a>pskeys_update_app_data</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_api.o(i.pskeys_update_app_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_spk_volume
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_set_a2dp_type
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[e]"></a>security_event_handler_imp</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, app_bt_new.o(i.security_event_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = security_event_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_UserConfirm
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_SetPin
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AuthorizeServiceB
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_user_confirm_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
</UL>
<P><STRONG><a name="[15]"></a>spp_callback_imp</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_bt_new.o(i.spp_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spp_callback_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_new.o(i.app_bt_init_imp)
</UL>
<P><STRONG><a name="[1f9]"></a>spp_register_imp</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, protocol_patch.o(i.spp_register_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spp_register_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_init_imp
</UL>

<P><STRONG><a name="[3b]"></a>spp_rfcomm_callback_imp</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, protocol_patch.o(i.spp_rfcomm_callback_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spp_rfcomm_callback_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_rfcomm_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> protocol_patch.o(i.spp_register_imp)
</UL>
<P><STRONG><a name="[127]"></a>spp_send_data</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, spp_api.o(i.spp_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spp_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[13e]"></a>system_sleep_disable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sys_utils.o(i.system_sleep_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_sleep_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init
</UL>

<P><STRONG><a name="[20]"></a>user_app_bt_profile_init_end</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, patch.o(i.user_app_bt_profile_init_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = user_app_bt_profile_init_end &rArr; PBA_ClientInit &rArr; PBAP_RegisterClnt &rArr; GOEP_RegisterClnt &rArr; OBEX_ClientInit &rArr; OBSTACK_ClientInit &rArr; BTSTACK_ClientInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBA_ClientInit
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAP_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_Init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[95]"></a>pmu_gpio_isr_ram</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, proj_main.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_gpio_isr_ram &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_toggle_detected (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[99]"></a>user_entry_before_sleep_imp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, proj_main.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc_noint (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save_entry_patch
</UL>

<P><STRONG><a name="[9b]"></a>user_entry_after_sleep_imp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, proj_main.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = user_entry_after_sleep_imp &rArr; app_at_init_app &rArr; system_set_port_mux
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_init_app
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc_noint (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp
</UL>

<P><STRONG><a name="[7d]"></a>app_at_uart_recv</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, app_at.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_at_uart_recv &rArr; os_msg_post
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_read_for_hci (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_at.o(ram_code)
</UL>
<P><STRONG><a name="[9c]"></a>app_at_init_app</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_at.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_at_init_app &rArr; system_set_port_mux
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_mux
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_pull_up
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_read_for_hci (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_stack_init (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp
</UL>

<P><STRONG><a name="[75]"></a>uart_isr_ram</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, app_at.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_isr_ram
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>pmu_set_ioldo_voltage</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, driver_pmu.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
</UL>

<P><STRONG><a name="[a4]"></a>pmu_shutdown</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, driver_pmu.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>

<P><STRONG><a name="[a5]"></a>charge_isr_ram</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_disable_isr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[a7]"></a>lvd_isr_ram</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_disable_isr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[a8]"></a>otd_isr_ram</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = otd_isr_ram &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_disable_isr (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[a9]"></a>onkey_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = onkey_isr_ram &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[ab]"></a>pmu_adkey0_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pmu_adkey0_isr_ram &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[ac]"></a>pmu_adkey1_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pmu_adkey1_isr_ram &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[ad]"></a>pmu_onkey_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pmu_onkey_isr_ram &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[73]"></a>timer0_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_timer.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clear_interrupt (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>timer1_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_timer.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clear_interrupt (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>rtc_isr_ram</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_rtc.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_isr_ram &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
</UL>

<P><STRONG><a name="[e0]"></a>system_set_pclk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, driver_syscntl.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
</UL>

<P><STRONG><a name="[fd]"></a>system_get_pclk_config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driver_syscntl.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us
</UL>

<P><STRONG><a name="[9f]"></a>system_set_port_pull_up</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_syscntl.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_init_app
</UL>

<P><STRONG><a name="[a0]"></a>system_set_port_mux</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, driver_syscntl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_set_port_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_pwm (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_init_app
</UL>

<P><STRONG><a name="[b0]"></a>ipc_msg_send</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, driver_ipc.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_insert_msg (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_alloc_channel (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
</UL>

<P><STRONG><a name="[b6]"></a>ipc_msg_with_payload_send</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, driver_ipc.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ipc_msg_with_payload_send
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_get_buffer_offset (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_insert_msg (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_alloc_channel (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback_imp (via Veneer)
</UL>

<P><STRONG><a name="[b9]"></a>ipc_msg_flush</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, driver_ipc.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
</UL>

<P><STRONG><a name="[2cd]"></a>ipc_clear_sending_msg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, driver_ipc.o(ram_code), UNUSED)

<P><STRONG><a name="[79]"></a>ipc_isr_ram</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, driver_ipc.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ipc_isr_ram
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_free_channel (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>sbc_init_imp</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, audio_codec_new.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sbc_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_rom (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[c0]"></a>digital_codec_init_imp</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, audio_codec_new.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_init_imp
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_off_handler_imp (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp (via Veneer)
</UL>

<P><STRONG><a name="[1b]"></a>audio_codec_init_imp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, audio_codec_new.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_codec_init_imp &rArr; digital_codec_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_init_reg_config (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digital_codec_init_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[7b]"></a>sbc_isr_imp</STRONG> (Thumb, 462 bytes, Stack size 24 bytes, audio_codec_new.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sbc_isr_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_play_tone (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>NVIC_EnableIRQ_imp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, patch.o(ram_code))
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.data)
</UL>
<P><STRONG><a name="[cd]"></a>enable_cache</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, patch.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retry_handshake
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[ca]"></a>disable_cache</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, patch.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retry_handshake
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[c9]"></a>flash_write</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = flash_write &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_cache
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_cache
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pskeys_update_app_data (via Veneer)
</UL>

<P><STRONG><a name="[ce]"></a>flash_erase</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_cache
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_cache
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pskeys_update_app_data (via Veneer)
</UL>

<P><STRONG><a name="[30]"></a>app_msg_calibration_end_handler_imp</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_msg_calibration_end_handler_imp &rArr; pmu_calibration_func &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_div_64 (via Veneer)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_mul_64 (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[98]"></a>frspim_wr</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otd_isr_ram
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_shutdown
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_voltage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_gpio_isr_ram
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save_entry_patch
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init_imp (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_func
</UL>

<P><STRONG><a name="[e3]"></a>NVIC_SetPriority_imp</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[96]"></a>frspim_rd</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = frspim_rd
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otd_isr_ram
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_voltage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_gpio_isr_ram
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save_entry_patch
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init_imp (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_func
</UL>

<P><STRONG><a name="[1e]"></a>low_power_save_entry_patch</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = low_power_save_entry_patch &rArr; pmu_clear_isr_state &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[1d]"></a>low_power_restore_entry_patch</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = low_power_restore_entry_patch &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_pclk
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_init (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority_imp
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_cache
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_init_imp
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_init_imp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_flash_init (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_cfg_set_baudrate (via Veneer)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[ec]"></a>rwip_param_if_reset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, patch.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_imp
</UL>

<P><STRONG><a name="[2ce]"></a>system_set_diagport</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, patch.o(ram_code), UNUSED)

<P><STRONG><a name="[e7]"></a>retry_handshake</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, patch.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_boot_host_comm (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_cache
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_cache
</UL>

<P><STRONG><a name="[d1]"></a>pmu_calibration_func</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, pmu_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pmu_calibration_func &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_calibration_end_handler_imp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[78]"></a>pmu_isr_imp</STRONG> (Thumb, 632 bytes, Stack size 24 bytes, pmu_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pmu_isr_imp &rArr; pmu_gpio_isr_ram &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_isr_ram
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_onkey_isr_ram
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_adkey1_isr_ram
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_adkey0_isr_ram
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onkey_isr_ram
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otd_isr_ram
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvd_isr_ram
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_isr_ram
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_gpio_isr_ram
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_calibration_end (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_isr_state (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[2cf]"></a>rf_sleep_imp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rf_patch.o(ram_code), UNUSED)

<P><STRONG><a name="[2d0]"></a>rf_rssi_convert_imp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_patch.o(ram_code), UNUSED)

<P><STRONG><a name="[2d1]"></a>rf_txpwr_dec_imp</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rf_patch.o(ram_code), UNUSED)

<P><STRONG><a name="[2d2]"></a>rf_txpwr_inc_imp</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, rf_patch.o(ram_code), UNUSED)

<P><STRONG><a name="[2d3]"></a>rf_txpwr_max_set_imp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_patch.o(ram_code), UNUSED)

<P><STRONG><a name="[19]"></a>rf_init_imp</STRONG> (Thumb, 1894 bytes, Stack size 16 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_init_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_param_if_reset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_rom (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[ee]"></a>rwip_timer_hus_handler_imp</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rwip_timer_hus_handler_imp &rArr; sch_arb_event_start_isr_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp
</UL>

<P><STRONG><a name="[f0]"></a>ld_acl_clk_isr_imp</STRONG> (Thumb, 386 bytes, Stack size 88 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ld_acl_clk_isr_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_push (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp
</UL>

<P><STRONG><a name="[f2]"></a>rwip_wakeup_end_imp</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_wakeup_end_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_sleep_wakeup_end (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_wakeup_end (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_imp
</UL>

<P><STRONG><a name="[6f]"></a>rwip_isr_imp</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = rwip_isr_imp &rArr; ld_acl_clk_isr_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_time (via Veneer)
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_notify_error_func (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end_imp
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_clk_isr_imp
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler_imp
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>rwbt_isr_imp</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rwbt_isr_imp &rArr; bt_notify_error_func
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_skip_isr (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_rx_isr (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_end_isr (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_notify_error_func (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>rwble_isr_imp</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, rf_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwble_isr_imp &rArr; bt_notify_error_func
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_tx_isr (via Veneer)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_skip_isr (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_rx_isr (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_end_isr (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_notify_error_func (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[fe]"></a>__asm___11_sys_utils_c_60d3efd0__cpu_delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sys_utils.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us
</UL>

<P><STRONG><a name="[e8]"></a>co_delay_100us</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, sys_utils.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_pclk_config
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_sys_utils_c_60d3efd0__cpu_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_stack_init (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retry_handshake
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init_imp (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wip_clear
</UL>

<P><STRONG><a name="[a3]"></a>co_delay_10us</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, sys_utils.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = co_delay_10us
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_pclk_config
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_sys_utils_c_60d3efd0__cpu_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_voltage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr_imp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write
</UL>

<P><STRONG><a name="[ff]"></a>FPB_CompSet_imp</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fpb_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FPB_CompSet_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch
</UL>

<P><STRONG><a name="[e2]"></a>fpb_patch</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, fpb_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fpb_patch &rArr; FPB_CompSet_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPB_CompSet_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_patch
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[1c]"></a>svc_exception_handler_imp</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, fpb_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svc_exception_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.app_entry_sub)
</UL>
<P><STRONG><a name="[86]"></a>sch_arb_prog_timer_imp</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, protocol_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sch_arb_prog_timer_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_set (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[ef]"></a>sch_arb_event_start_isr_imp</STRONG> (Thumb, 608 bytes, Stack size 48 bytes, protocol_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sch_arb_event_start_isr_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_inq_stop (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler_imp
</UL>

<P><STRONG><a name="[89]"></a>lld_con_frm_cbk_imp</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, protocol_patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_con_frm_cbk_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch.o(.data)
</UL>
<P><STRONG><a name="[104]"></a>flash_OTP_write</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, driver_flash.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[106]"></a>flash_OTP_read</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, driver_flash.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[107]"></a>flash_OTP_erase</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, driver_flash.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[108]"></a>flash_wait_wip_clear</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, driver_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable_nonvolatile
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status_imp
</UL>

<P><STRONG><a name="[109]"></a>flash_read_status_imp</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, driver_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_read_status_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_disable
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable_nonvolatile
</UL>

<P><STRONG><a name="[10a]"></a>flash_write_status_imp</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, driver_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wip_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_disable
</UL>

<P><STRONG><a name="[cc]"></a>flash_protect_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, driver_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status_imp
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[cb]"></a>flash_protect_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, driver_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = flash_protect_disable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status_imp
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[10b]"></a>flash_protect_enable_nonvolatile</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, driver_flash.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status_imp
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wip_clear
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[110]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_at.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; ascii_strn2val
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_strn2val
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[112]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_at.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_ascii_strn2val
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[114]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_at.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; avrcp_set_panel_key &rArr; AVRCP_SetPanelKey_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_set_panel_key
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>

<P><STRONG><a name="[2]"></a>user_task_func</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_task.o(.text.user_task_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = user_task_func &rArr; app_at_cmd_recv_handler &rArr; bt_set_spk_volume &rArr; pskeys_update_app_data &rArr; flash_erase &rArr; flash_protect_enable &rArr; flash_write_status_imp &rArr; flash_wait_wip_clear &rArr; co_delay_100us
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_at_cmd_recv_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_task.o(.text.user_task_init)
</UL>
<P><STRONG><a name="[12b]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_bt.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_disconnect
</UL>

<P><STRONG><a name="[67]"></a>HardFault_Handler_Ram</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_boot_vectors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler_Ram &rArr; HardFault_Handler_C &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler_C
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SVC_Handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_boot_vectors.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSVCHandler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>ipc_msg_sent</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, driver_ipc.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_get_buffer_offset (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_insert_msg (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_alloc_channel (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[22e]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, audio_codec_new.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_sco_handler_imp
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_clear_state_imp
</UL>

<P><STRONG><a name="[1ff]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, patch.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[200]"></a>__set_BASEPRI</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, patch.o(i.__set_BASEPRI))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub
</UL>

<P><STRONG><a name="[2f]"></a>app_button_pressed_handler_imp</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, patch.o(i.app_button_pressed_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_button_pressed_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[2d]"></a>bt_dev0_enter_sniff_handler</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, patch.o(i.bt_dev0_enter_sniff_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_dev0_enter_sniff_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_StartSniff
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_FindRemoteDeviceP
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[28]"></a>gapc_hci_handler_imp</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, patch.o(i.gapc_hci_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_hci_handler_imp &rArr; hci_disc_cmp_evt_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[27]"></a>hci_acl_data_handler_imp</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, patch.o(i.hci_acl_data_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_acl_data_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ME_Callback
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_active
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_util_buf_acl_rx_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[26]"></a>hci_event_handler_imp</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, patch.o(i.hci_event_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hci_event_handler_imp &rArr; SecHandleLinkKeyNotify_imp &rArr; SEC_AddDeviceRecord_imp &rArr; DDB_AddRecord_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeHandleEvents
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleLinkKeyNotify_imp
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleConfirmReq_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[25]"></a>hci_host_tx_cmd_handler_imp</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, patch.o(i.hci_host_tx_cmd_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_host_tx_cmd_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_received
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLE16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.ke_handler_search_get_imp)
</UL>
<P><STRONG><a name="[80]"></a>rwip_param_dummy_del</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, patch.o(i.rwip_param_dummy_del))
<BR>[Address Reference Count : 1]<UL><LI> patch.o(ram_code)
</UL>
<P><STRONG><a name="[7e]"></a>rwip_param_dummy_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, patch.o(i.rwip_param_dummy_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_param_dummy_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(ram_code)
</UL>
<P><STRONG><a name="[7f]"></a>rwip_param_dummy_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, patch.o(i.rwip_param_dummy_set))
<BR>[Address Reference Count : 1]<UL><LI> patch.o(ram_code)
</UL>
<P><STRONG><a name="[d3]"></a>rwip_sleep_time_calc_ram</STRONG> (Thumb, 362 bytes, Stack size 32 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rwip_sleep_time_calc_ram
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp
</UL>

<P><STRONG><a name="[d6]"></a>rwip_sleep_imp</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rwip_sleep_imp &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_time_calc_ram
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwbt_sleep_enter (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_enter (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[d9]"></a>main_loop</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, patch.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_loop &rArr; rwip_sleep_imp &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_INT_START (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_INT_STOP (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_imp
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_entry_sub (via Veneer)
</UL>

<P><STRONG><a name="[2bf]"></a>os_build_task_desc</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, os_task.o(i.os_build_task_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_task_func_to_msg_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create_x
</UL>

<P><STRONG><a name="[23]"></a>os_default_task_func</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, os_task.o(i.os_default_task_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = os_default_task_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_task.o(i.from_task_func_to_msg_handle)
</UL>
<P><STRONG><a name="[228]"></a>ascii_char2val</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sys_utils.o(i.ascii_char2val))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_strn2val
</UL>

<P><STRONG><a name="[219]"></a>appm_send_gapm_reset_cmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_ble_new.o(i.appm_send_gapm_reset_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_send_gapm_reset_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_ble_init_imp
</UL>

<P><STRONG><a name="[179]"></a>AsciiToUnicode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, goep.o(i.AsciiToUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientBuildHeaders
</UL>

<P><STRONG><a name="[156]"></a>AssociateServer</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, goep.o(i.AssociateServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AssociateServer &rArr; OBEX_ServerGetConnInfo &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerGetConnInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrServer
</UL>

<P><STRONG><a name="[178]"></a>ClientBuildHeaders</STRONG> (Thumb, 678 bytes, Stack size 296 bytes, goep.o(i.ClientBuildHeaders))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ClientBuildHeaders &rArr; OBEXH_BuildUnicode &rArr; OBEXH_BuildByteSeq &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost32 (via Veneer)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_GetAvailableTxHeaderLen
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildUnicode
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_BuildByteSeq
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build4Byte
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEXH_Build1Byte
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
</UL>

<P><STRONG><a name="[192]"></a>DoUniHeaderCopy</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, goep.o(i.DoUniHeaderCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DoUniHeaderCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientProcessHeaders
</UL>

<P><STRONG><a name="[18c]"></a>GetFreeConnId</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, goep.o(i.GetFreeConnId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetFreeConnId
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_RegisterClnt
</UL>

<P><STRONG><a name="[191]"></a>GoepClientProcessHeaders</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, goep.o(i.GoepClientProcessHeaders))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GoepClientProcessHeaders &rArr; NotifyCurrClient
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrClient
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoUniHeaderCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClntCallback
</UL>

<P><STRONG><a name="[185]"></a>GoepClientSecAccessRequest</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, goep.o(i.GoepClientSecAccessRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GoepClientSecAccessRequest &rArr; OBEX_GetTpConnInfo &rArr; OS_UnlockObex
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AccessRequest
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_GetTpConnInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
</UL>

<P><STRONG><a name="[7]"></a>GoepClntCallback</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, goep.o(i.GoepClntCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GoepClntCallback &rArr; GoepClientProcessHeaders &rArr; NotifyCurrClient
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_CancelAccessRequest
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyCurrClient
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyAllClients
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientProcessHeaders
</UL>
<BR>[Address Reference Count : 1]<UL><LI> goep.o(i.GOEP_RegisterClnt)
</UL>
<P><STRONG><a name="[196]"></a>NotifyAllClients</STRONG> (Thumb, 212 bytes, Stack size 184 bytes, goep.o(i.NotifyAllClients))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NotifyAllClients
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClntCallback
</UL>

<P><STRONG><a name="[193]"></a>NotifyCurrClient</STRONG> (Thumb, 74 bytes, Stack size 184 bytes, goep.o(i.NotifyCurrClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NotifyCurrClient
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepSecCallback
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClntCallback
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepClientProcessHeaders
</UL>

<P><STRONG><a name="[198]"></a>NotifyCurrServer</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, goep.o(i.NotifyCurrServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = NotifyCurrServer &rArr; OBEX_ServerSendResponse &rArr; ObServerSendResponse &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AssociateServer
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoepSecCallback
</UL>

<P><STRONG><a name="[c]"></a>PbapGoepClientCallback</STRONG> (Thumb, 648 bytes, Stack size 24 bytes, pbap.o(i.PbapGoepClientCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = PbapGoepClientCallback &rArr; GOEP_Connect &rArr; ClientBuildHeaders &rArr; OBEXH_BuildUnicode &rArr; OBEXH_BuildByteSeq &rArr; ObIsHeaderSpaceAvail
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost16 (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBAPOBS_Close
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindPbapClient
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_TpDisconnect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOEP_Connect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pbap.o(i.PBAP_RegisterClnt)
</UL>
<P><STRONG><a name="[15b]"></a>AvrcpHandleGetElementAttrRsp</STRONG> (Thumb, 230 bytes, Stack size 136 bytes, protocol_patch.o(i.AvrcpHandleGetElementAttrRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = AvrcpHandleGetElementAttrRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost32 (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost16 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AvrcpHandleAdvancedResponse_imp
</UL>

<P><STRONG><a name="[1dd]"></a>SecGetCurrentBondingMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, protocol_patch.o(i.SecGetCurrentBondingMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SecGetCurrentBondingMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecHandleUserIoReq_imp
</UL>

<P><STRONG><a name="[29d]"></a>lc_sniff_peer_request_imp</STRONG> (Thumb, 1044 bytes, Stack size 112 bytes, protocol_patch.o(i.lc_sniff_peer_request_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lc_sniff_peer_request_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_sniff_trans
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_clock_offset_get
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_util_get_offset_clkn
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_util_get_offset_clke
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_start_lmp_to
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_pdu_not_acc
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_pdu_acc
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sam_slot_av_get
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sam_intv_get
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_req
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_chk
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lmp_sniff_req_handler_imp
</UL>

<P><STRONG><a name="[297]"></a>lmp_name_res_handler_imp</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, protocol_patch.o(i.lmp_name_res_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lmp_name_res_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_start_lmp_to
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_lmp
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_rem_name_cont
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_notify_name_func
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
</UL>

<P><STRONG><a name="[294]"></a>lmp_reats_res_ext_handler_imp</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, protocol_patch.o(i.lmp_reats_res_ext_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lmp_reats_res_ext_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LM_GetFeature
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_ext_feat
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_conn_seq_done
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lm_get_sp_en
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lm_get_sec_con_host_supp
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
</UL>

<P><STRONG><a name="[296]"></a>lmp_set_afh_handler_imp</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, protocol_patch.o(i.lmp_set_afh_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lmp_set_afh_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_acl_afh_set
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_pdu_not_acc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
</UL>

<P><STRONG><a name="[293]"></a>lmp_sniff_req_handler_imp</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, protocol_patch.o(i.lmp_sniff_req_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lmp_sniff_req_handler_imp &rArr; lc_sniff_peer_request_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_pdu_not_acc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_sniff_peer_request_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
</UL>

<P><STRONG><a name="[295]"></a>lmp_ver_req_handler_imp</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, protocol_patch.o(i.lmp_ver_req_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lmp_ver_req_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_send_lmp
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_lmp_rx_handler_imp
</UL>

<P><STRONG><a name="[4a]"></a>app_get_current_rssi_rsp</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, app_ble_task_new.o(i.app_get_current_rssi_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_get_current_rssi_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[222]"></a>app_get_handler</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_ble_task_new.o(i.app_get_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_get_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[20f]"></a>app_user_timeout_handler</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, app_ble_task_new.o(i.app_user_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_user_timeout_handler &rArr; check_timer_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[41]"></a>appm_msg_handler</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, app_ble_task_new.o(i.appm_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = appm_msg_handler &rArr; app_update_params_update_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_update_ind_func
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_user_timeout_handler
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_cmp_evt_handler &rArr; app_update_params_rejected_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_rejected_ind_func
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_complete_ind_func
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypt_compeleted_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_connection_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapc_connection_req_ind_handler &rArr; ble_bond_check &rArr; ble_sec_init &rArr; get_stored_info_req
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_remote_svc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_get_bond_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_disconnect_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_disconnect_ind_handler &rArr; app_disconnect_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_get_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapc_get_dev_info_req_ind_handler &rArr; gap_get_dev_name
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_dev_name
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_dev_appearance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_param_update_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_param_update_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>gapc_peer_features_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_peer_features_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_peer_features_ind_handler &rArr; app_get_info_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_info_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>gapc_peer_ver_ind_handler</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, app_ble_task_new.o(i.gapc_peer_ver_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapc_peer_ver_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapc_set_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_set_dev_info_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, app_ble_task_new.o(i.gapm_activity_created_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gapm_activity_created_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapm_activity_stopped_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_activity_stopped_ind_handler &rArr; app_scanning_completed_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scanning_completed_ind_func
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_completed_ind_func
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_complete_ind_func
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_complete_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>gapm_addr_solved_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapm_addr_solved_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_addr_solved_ind_handler &rArr; app_addr_resolve_result_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_addr_resolve_result_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapm_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapm_cmp_evt_handler &rArr; app_reset_complete_ind_func &rArr; user_entry_after_stack_init &rArr; user_task_init &rArr; os_task_create &rArr; os_task_create_x &rArr; os_build_task_desc &rArr; from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_add_svc
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_reset_complete_ind_func
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_db_init_complete_ind_func
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_addr_resolve_result_ind_func
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_get_bond_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>gapm_enc_block_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapm_enc_block_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_enc_block_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>gapm_ext_adv_report_ind_handler</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapm_ext_adv_report_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_ext_adv_report_ind_handler &rArr; app_adv_report_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, app_ble_task_new.o(i.gapm_gen_rand_nb_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gapm_gen_rand_nb_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app_ble_task_new.o(i.gapm_profile_added_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_profile_added_ind_handler &rArr; app_svc_added_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_svc_added_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>gapm_sync_established_ind_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_ble_task_new.o(i.gapm_sync_established_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_sync_established_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>gattc_event_ind_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_ble_task_new.o(i.gattc_event_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattc_event_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_task_new.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_sec.o(i.app_sec_msg_dflt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sec_msg_dflt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[25a]"></a>gap_paring_req_cb</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, app_sec.o(i.gap_paring_req_cb))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[58]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, app_sec.o(i.gapc_bond_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_bond_ind_handler &rArr; app_connection_slave_encrypted_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_slave_encrypted_ind_func
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_paring_info_ind_func
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypted_ind_func
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 432 bytes, Stack size 56 bytes, app_sec.o(i.gapc_bond_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_bond_req_ind_handler &rArr; app_connection_paring_info_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_paring_req_cb
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_paring_info_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, app_sec.o(i.gapc_encrypt_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_encrypt_ind_handler &rArr; app_connection_slave_encrypted_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_slave_encrypted_ind_func
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypted_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, app_sec.o(i.gapc_encrypt_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapc_encrypt_req_ind_handler &rArr; ble_sec_check_ediv_rand
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_check_ediv_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>gapc_security_ind_handler</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, app_sec.o(i.gapc_security_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapc_security_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[22]"></a>ble_bond_addr_resolve_cb</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, user_bond_manage.o(i.ble_bond_addr_resolve_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_bond_addr_resolve_cb &rArr; ble_sec_init &rArr; get_stored_info_req
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_evt_func
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_bond_manage.o(i.ble_bond_check)
</UL>
<P><STRONG><a name="[268]"></a>gatt_clr_peer_svc</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_clr_peer_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_clr_peer_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[26e]"></a>gatt_get_desc_hdl_from_peer_db</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_get_desc_hdl_from_peer_db))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_get_desc_hdl_from_peer_db
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[26d]"></a>gatt_get_hdl_from_peer_db</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_get_hdl_from_peer_db))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_get_hdl_from_peer_db
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[24]"></a>gatt_msg_default_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_msg_default_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = gatt_msg_default_handler &rArr; gatt_msg_default_handler_imp &rArr; gatt_store_peer_prf_info &rArr; prf_extract_svc_info_uuid_128
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(i.gatt_service_init)
</UL>
<P><STRONG><a name="[269]"></a>gatt_msg_default_handler_imp</STRONG> (Thumb, 1610 bytes, Stack size 296 bytes, gatt_api.o(i.gatt_msg_default_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = gatt_msg_default_handler_imp &rArr; gatt_store_peer_prf_info &rArr; prf_extract_svc_info_uuid_128
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_active_service_id
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_get_hdl_from_peer_db
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_get_desc_hdl_from_peer_db
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clr_peer_svc
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler
</UL>

<P><STRONG><a name="[26c]"></a>gatt_regist_peer_prf_info</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gatt_api.o(i.gatt_regist_peer_prf_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_regist_peer_prf_info
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[92]"></a>gatt_service_connection_cleanup</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gatt_api.o(i.gatt_service_connection_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_service_connection_cleanup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[91]"></a>gatt_service_connection_created</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, gatt_api.o(i.gatt_service_connection_created))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_service_connection_created
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>gatt_service_destroy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gatt_api.o(i.gatt_service_destroy))
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>gatt_service_init</STRONG> (Thumb, 972 bytes, Stack size 72 bytes, gatt_api.o(i.gatt_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatt_service_init &rArr; attm_svc_create_db_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_task_func_to_msg_handle
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[26b]"></a>gatt_store_peer_prf_info</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, gatt_api.o(i.gatt_store_peer_prf_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gatt_store_peer_prf_info &rArr; prf_extract_svc_info_uuid_128
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info_uuid_128
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[26a]"></a>get_active_service_id</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gatt_api.o(i.get_active_service_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_active_service_id
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[1ba]"></a>ClientComplete</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, obclient.o(i.ClientComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ClientComplete
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessSimpleOpEvents
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessPutEvents
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGetEvents
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientEventInd
</UL>

<P><STRONG><a name="[1bd]"></a>ObParserSendPacket</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, obparse.o(i.ObParserSendPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreBE16
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBSTACK_GetTxBuffer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerReadHeaderBlockFlex
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerReadHeaderBlock
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerGetHeaderBlockLen
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientReadHeaderBlockFlex
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientReadHeaderBlock
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientGetHeaderBlockLen
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxDone
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParserTxBuffAvail
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerSendResponse
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObClientSendCommand
</UL>

<P><STRONG><a name="[1be]"></a>ParseHeaderType</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, obparse.o(i.ParseHeaderType))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObParseRx
</UL>

<P><STRONG><a name="[152]"></a>AppCallback</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, observer.o(i.AppCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AppCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEtoHost32 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGeneral
</UL>

<P><STRONG><a name="[154]"></a>AssociateConn</STRONG> (Thumb, 386 bytes, Stack size 16 bytes, observer.o(i.AssociateConn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AssociateConn
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGet
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGeneral
</UL>

<P><STRONG><a name="[1b2]"></a>CancelOperation</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, observer.o(i.CancelOperation))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerSendResponse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBEX_ServerAbort
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessGet
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerReadHeaderBlockFlex
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObServerReadHeaderBlock
</UL>

<P><STRONG><a name="[61]"></a>BTSTACK_DisconnectReq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, obxbtstk.o(i.BTSTACK_DisconnectReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTSTACK_DisconnectReq
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CloseChannel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>BTSTACK_GetTpConnInfo</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, obxbtstk.o(i.BTSTACK_GetTpConnInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BTSTACK_GetTpConnInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RemoteDevice
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FrameSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>BTSTACK_MaxTxSize</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, obxbtstk.o(i.BTSTACK_MaxTxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTSTACK_MaxTxSize
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FrameSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>BTSTACK_SendTxBuffer</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, obxbtstk.o(i.BTSTACK_SendTxBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BTSTACK_SendTxBuffer &rArr; OBPROT_ReturnTxBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendData
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_ReturnTxBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(.constdata)
</UL>
<P><STRONG><a name="[5]"></a>BtClientCallBack</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, obxbtstk.o(i.BtClientCallBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BtClientCallBack &rArr; OBPROT_TxDone &rArr; ObParserTxDone &rArr; ObParserSendPacket &rArr; ObParserTxBuffAvail &rArr;  ObParserSendPacket (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_OpenClientChannel
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CloseChannel
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_AdvanceCredit
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_IsLinkUp (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_TxDone
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_ReturnTxBuffer
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_ParseRx
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_Connected
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(i.BTSTACK_ClientInit)
</UL>
<P><STRONG><a name="[3]"></a>BtClientCmgrCallback</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, obxbtstk.o(i.BtClientCmgrCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BtClientCmgrCallback &rArr; BtDisconnectClientLink &rArr; OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_Disconnected
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtStartServiceQuery
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(i.BTSTACK_ClientInit)
</UL>
<P><STRONG><a name="[4]"></a>BtClientGeneralCallback</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, obxbtstk.o(i.BtClientGeneralCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BtClientGeneralCallback &rArr; BtDisconnectClientLink &rArr; OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_OpenClientChannel
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_IsLinkUp (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_UnlockObex
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_LockObex
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_Disconnected
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtVerifySdpQueryRsp
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtStartServiceQuery
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtDisconnectClientLink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> obxbtstk.o(i.BTSTACK_ClientInit)
</UL>
<P><STRONG><a name="[163]"></a>BtDisconnectClientLink</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, obxbtstk.o(i.BtDisconnectClientLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BtDisconnectClientLink &rArr; OBPROT_Disconnected &rArr; ObParserDisconnectInd
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_RemoveDataLink (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_IsLinkUp (via Veneer)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBPROT_Disconnected
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTSTACK_ClientDisconnect
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCmgrCallback
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCallBack
</UL>

<P><STRONG><a name="[172]"></a>BtStartServiceQuery</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, obxbtstk.o(i.BtStartServiceQuery))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BtStartServiceQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDP_Query
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR_IsLinkUp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientCmgrCallback
</UL>

<P><STRONG><a name="[174]"></a>BtVerifySdpQueryRsp</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, obxbtstk.o(i.BtVerifySdpQueryRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BtVerifySdpQueryRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDP_ParseAttributes
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtClientGeneralCallback
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
